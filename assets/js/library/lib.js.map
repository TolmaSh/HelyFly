{"version":3,"sources":["lightgallery.umd.js","lg-video.umd.js","lg-zoom.umd.js","lg-thumbnail.umd.js"],"names":["global","factory","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","window","CustomEvent","event","params","bubbles","cancelable","detail","evt","document","createEvent","initCustomEvent","Element","matches","msMatchesSelector","webkitMatchesSelector","lgQuery","generateUUID","replace","c","r","Math","random","toString","_getSelector","selector","context","substring","querySelector","querySelectorAll","_each","func","undefined","forEach","_setCssVendorPrefix","el","cssProperty","value","property","group1","toUpperCase","cssVenderPrefixes","indexOf","style","charAt","toLowerCase","slice","_getFirstEl","isEventMatched","eventName","eventNamespace","split","filter","e","every","attr","firstElement","getAttribute","setAttribute","find","$LG","first","eq","index","parent","parentElement","get","removeAttr","attributes","attrs","removeAttribute","wrap","className","wrapper","createElement","parentNode","insertBefore","removeChild","appendChild","addClass","classNames","classList","add","removeClass","remove","hasClass","contains","hasAttribute","attribute","toggleClass","css","_this","on","events","listener","Array","isArray","eventListeners","push","addEventListener","once","off","keys","removeEventListener","trigger","customEvent","dispatchEvent","load","url","fetch","then","res","innerHTML","html","append","insertAdjacentHTML","prepend","empty","scrollTop","body","documentElement","pageYOffset","scrollLeft","pageXOffset","offset","left","top","rect","getBoundingClientRect","bodyMarginLeft","marginLeft","parseFloat","currentStyle","getComputedStyle","width","clientWidth","paddingLeft","paddingRight","height","clientHeight","paddingTop","paddingBottom","defaultDynamicOptions","utils","container","spacing","defaultLgSize","lgSize","isResponsiveSizes","wWidth","innerWidth","size_1","parseInt","size","cWidth","cHeight","maxWidth","min","maxHeight","ratio","bottom","imageSize","LGel","containerRect","wHeight","elWidth","elHeight","elStyle","x","borderLeft","y","borderTop","src","iframeWidth","iframeHeight","iframeTitle","altAttr","srcset","sizes","sources","imgMarkup","sourceTag","JSON","parse","map","source","key","srcItms","rsWidth","rsSrc","_src","splice","j","img","complete","naturalWidth","_poster","dummyImg","videoContStyle","_isVideo","youtube","vimeo","items","extraProps","getCaptionFromTitleOrAlt","exThumbImage","dynamicElements","availableDynamicOptions","il","k","a","jl","__spreadArrays","item","dynamicEl","dynamicAttr","label","specified","name","g","currentItem","alt","title","thumb","subHtml","test","navigator","userAgent","lightGalleryCoreSettings","mode","easing","speed","licenseKey","startClass","backdropDuration","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","loop","escKey","keyPress","controls","slideEndAnimation","hideControlOnEnd","mousewheel","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","showAfterLoad","selectWithin","nextHtml","prevHtml","download","counter","appendCounterTo","swipeThreshold","enableSwipe","enableDrag","dynamic","isMobile","mobileSettings","plugins","lGEvents","lgId","LightGallery","generateSettings","options","settings","normalizeSettings","galleryItems","init","addSlideVideoInfo","buildStructure","instance","setTimeout","arrow","openGalleryOnItemClick","this_1","element","$element","uuid","preventDefault","currentItemIndex","openGallery","_loop_1","buildModules","plugin","validateLicense","console","warn","error","getSlideItem","getSlideItemId","getIdName","id","getElementById","manageSingleSlideClassName","outer","addClasses","containerClassName","closeIcon","maximizeIcon","outerClassNames","$container","subHtmlCont","template","$lgContent","$lgComponents","$backdrop","$inner","$toolbar","refreshOnResize","hideBars","manageCloseGallery","toggleMaximize","initModules","top_1","imgStyle","lgOpened","videoInfo","__slideVideoInfo","_a","getMediaContainerPosition","currentImageSize","resizeVideoSlide","isDummyImageRemoved","getDummyImgStyles","lgVideoStyle","getVideoContStyle","updateSlides","currentSrc","_index","currentItemsInDom","some","galleryItem","itemIndex","organizeSlideItems","loadContent","updateCurrentCounter","updateCounterTotal","closeGallery","getItems","children","transform","timeout","focus","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","mediaContainerPosition","setMediaContainerPosition","lGalleryOn","prevScrollTop","currentSlide_1","slide","captionHeight","thumbContainer","clearTimeout","hideBarTimeout","initPictureFill","$img","picturefill","elements","counterHtml","subHtmlUrl","currentSlide","fL","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","dummyImgContent","setImgMarkup","currentGalleryItem","imgContent","onLgObjectLoad","$el","delay","dummyImageLoaded","handleLgObjectLoad","isVideo","video","html5","match","wistia","rec","poster","_html5Video","responsive","srcDyItms","top_2","isFirstSlide_1","iframe","videoSize","markup","hasStartAnimation","delay_1","html5Video","hasPoster","isFirstSlide","_speed","mediaObject","loadContentOnLoad","prevIndex","numberOfItems","possibleNumberOfItems","max","prevIndexItem","_element","idx","numberOfExistingItems","getPreviousSlideIndex","currentItemId","setDownloadValue","downloadUrl","makeSlideAnimation","direction","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","touchPrev","touchNext","lgBusy","getSlideType","arrowDisable","touchMove","startCoords","endCoords","scale","distanceX","pageX","distanceY","pageY","allowSwipe","swipeDirection","abs","setTranslate","gutter","offsetWidth","opacity","innerHeight","touchEnd","distance","triggerClick","distanceAbs","goToNextSlide","goToPrevSlide","target","isPosterElement","isMoved","isSwiping","$item","targetTouches","touchAction","manageSwipeClass","isDraging","_touchNext","_touchPrev","_loop","keyCode","$prev","$next","xValue","yValue","scaleX","scaleY","deltaY","isSlideElement","playButton","invalidateItems","mousedown","force","top_4","destroyModules","removeTimeout","blur","module","err","destroy","refresh","closeTimeout","exports","define","amd","lightGallery","zoomSettings","zoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","Zoom","core","buildTemplates","zoomIcons","enableZoom","zoomableTimeout","enableZoomOnSlideItemLoad","bind","getModifier","rotateValue","axis","originalRotate","transformValues","getCurrentTransform","flipVerticalValue","modifier","flipHorizontalValue","sign","sinX","sinMinusX","getImageSize","$image","getDragCords","getSwipeCords","getDragAllowedAxises","$lg","imgEl","allowY","allowX","st","tm","getPropertyValue","getCurrentRotation","values","round","atan2","PI","zoomImage","originalX","_x","imageNode","offsetX","offsetY","offsetHeight","positionChanged","originalY","_y","setZoomStyles","$dummyImage","$imageWrap","setActualSize","getCurrentImageActualSizeScale","getScale","setPageCords","beginZoom","getNaturalWidth","getActualSizeScale","getPageCords","cords","pageCords","resetZoom","actualSizeScale","tapped","$target","zoomDrag","pinchZoom","zoomSwipe","$actualSize","getTouchDistance","sqrt","startDist","pinchStarted","initScale","endDist","touchendZoom","touchDuration","rotateEl","distanceXnew","distanceYnew","speedX","speedY","_LGel","dataX","dataY","possibleSwipeCords","getPossibleSwipeDragCords","maxY","minY","maxX","minX","dataY_1","dataX_1","setZoomSwipeStyles","getZoomSwipeCords","diffMinY","diffMinX","diffMaxY","diffMaxX","$cont","contHeight","contWidth","imageYSize","imageXSize","elDataScale","startTime","Date","dragAllowedAxises","valueOf","endTime","isDragging","lgZoom","thumbnailsSettings","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbHeight","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","Thumbnail","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","setAnimateThumbStyles","build","toggleThumbBar","thumbKeyPress","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","rebuildThumbnails","thumbOuterClassNames","$thumbOuter","setThumbItemHtml","thumbDragUtils","startX","endX","newTranslateX","touchMoveTime","onThumbTouchMove","onThumbTouchEnd","getPossibleTransformX","position","getThumbHtml","slideVideoInfo","thumbImg","getThumbItemHtml","thumbList","$thumb","lgThumbnail","videoSettings","autoplayFirstVideo","youTubePlayerParams","vimeoPlayerParams","wistiaPlayerParams","gotoNextSlideOnVideoEnd","autoplayVideoOnSlide","videojs","videojsOptions","param","obj","encodeURIComponent","join","Video","onHasVideo","loadVideoOnPosterClick","onBeforeSlide","onAfterSlide","appendVideos","$slide","playVideo","pauseVideo","_videoInfo","controlVideo","getVideoHtml","videoTitle","commonIframeProps","videoId","playerParams","wistiaId","html5VideoMarkup","type","html5VideoAttrs_1","videoAttributes_1","videoParams","videoHtml","$videoElement","Vimeo","Player","_wq","onReady","action","contentWindow","postMessage","_html","videoJsPlayer_1","$tempImg","ready","onVideoLoadAfterPosterClick","lgVideo"],"mappings":"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","file":"lib.js","sourcesContent":["/*!\n * lightgallery | 2.2.0-beta.0 | June 15th 2021\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.lightGallery = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    (function () {\r\n        if (typeof window.CustomEvent === 'function')\r\n            return false;\r\n        function CustomEvent(event, params) {\r\n            params = params || { bubbles: false, cancelable: false, detail: null };\r\n            var evt = document.createEvent('CustomEvent');\r\n            evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n            return evt;\r\n        }\r\n        window.CustomEvent = CustomEvent;\r\n    })();\r\n    (function () {\r\n        if (!Element.prototype.matches) {\r\n            Element.prototype.matches =\r\n                Element.prototype.msMatchesSelector ||\r\n                    Element.prototype.webkitMatchesSelector;\r\n        }\r\n    })();\r\n    var lgQuery = /** @class */ (function () {\r\n        function lgQuery(selector) {\r\n            this.cssVenderPrefixes = [\r\n                'TransitionDuration',\r\n                'TransitionTimingFunction',\r\n                'Transform',\r\n                'Transition',\r\n            ];\r\n            this.selector = this._getSelector(selector);\r\n            this.firstElement = this._getFirstEl();\r\n            return this;\r\n        }\r\n        lgQuery.generateUUID = function () {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n                return v.toString(16);\r\n            });\r\n        };\r\n        lgQuery.prototype._getSelector = function (selector, context) {\r\n            if (context === void 0) { context = document; }\r\n            if (typeof selector !== 'string') {\r\n                return selector;\r\n            }\r\n            context = context || document;\r\n            var fl = selector.substring(0, 1);\r\n            if (fl === '#') {\r\n                return context.querySelector(selector);\r\n            }\r\n            else {\r\n                return context.querySelectorAll(selector);\r\n            }\r\n        };\r\n        lgQuery.prototype._each = function (func) {\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            if (this.selector.length !== undefined) {\r\n                [].forEach.call(this.selector, func);\r\n            }\r\n            else {\r\n                func(this.selector, 0);\r\n            }\r\n            return this;\r\n        };\r\n        lgQuery.prototype._setCssVendorPrefix = function (el, cssProperty, value) {\r\n            // prettier-ignore\r\n            var property = cssProperty.replace(/-([a-z])/gi, function (s, group1) {\r\n                return group1.toUpperCase();\r\n            });\r\n            if (this.cssVenderPrefixes.indexOf(property) !== -1) {\r\n                el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;\r\n                el.style['webkit' + property] = value;\r\n                el.style['moz' + property] = value;\r\n                el.style['ms' + property] = value;\r\n                el.style['o' + property] = value;\r\n            }\r\n            else {\r\n                el.style[property] = value;\r\n            }\r\n        };\r\n        lgQuery.prototype._getFirstEl = function () {\r\n            if (this.selector && this.selector.length !== undefined) {\r\n                return this.selector[0];\r\n            }\r\n            else {\r\n                return this.selector;\r\n            }\r\n        };\r\n        lgQuery.prototype.isEventMatched = function (event, eventName) {\r\n            var eventNamespace = eventName.split('.');\r\n            return event\r\n                .split('.')\r\n                .filter(function (e) { return e; })\r\n                .every(function (e) {\r\n                return eventNamespace.indexOf(e) !== -1;\r\n            });\r\n        };\r\n        lgQuery.prototype.attr = function (attr, value) {\r\n            if (value === undefined) {\r\n                if (!this.firstElement) {\r\n                    return '';\r\n                }\r\n                return this.firstElement.getAttribute(attr);\r\n            }\r\n            this._each(function (el) {\r\n                el.setAttribute(attr, value);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.find = function (selector) {\r\n            return $LG(this._getSelector(selector, this.selector));\r\n        };\r\n        lgQuery.prototype.first = function () {\r\n            if (this.selector && this.selector.length !== undefined) {\r\n                return $LG(this.selector[0]);\r\n            }\r\n            else {\r\n                return $LG(this.selector);\r\n            }\r\n        };\r\n        lgQuery.prototype.eq = function (index) {\r\n            return $LG(this.selector[index]);\r\n        };\r\n        lgQuery.prototype.parent = function () {\r\n            return $LG(this.selector.parentElement);\r\n        };\r\n        lgQuery.prototype.get = function () {\r\n            return this._getFirstEl();\r\n        };\r\n        lgQuery.prototype.removeAttr = function (attributes) {\r\n            var attrs = attributes.split(' ');\r\n            this._each(function (el) {\r\n                attrs.forEach(function (attr) { return el.removeAttribute(attr); });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.wrap = function (className) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            var wrapper = document.createElement('div');\r\n            wrapper.className = className;\r\n            this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\r\n            this.firstElement.parentNode.removeChild(this.firstElement);\r\n            wrapper.appendChild(this.firstElement);\r\n            return this;\r\n        };\r\n        lgQuery.prototype.addClass = function (classNames) {\r\n            if (classNames === void 0) { classNames = ''; }\r\n            this._each(function (el) {\r\n                // IE doesn't support multiple arguments\r\n                classNames.split(' ').forEach(function (className) {\r\n                    el.classList.add(className);\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.removeClass = function (classNames) {\r\n            this._each(function (el) {\r\n                // IE doesn't support multiple arguments\r\n                classNames.split(' ').forEach(function (className) {\r\n                    el.classList.remove(className);\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.hasClass = function (className) {\r\n            if (!this.firstElement) {\r\n                return false;\r\n            }\r\n            return this.firstElement.classList.contains(className);\r\n        };\r\n        lgQuery.prototype.hasAttribute = function (attribute) {\r\n            if (!this.firstElement) {\r\n                return false;\r\n            }\r\n            return this.firstElement.hasAttribute(attribute);\r\n        };\r\n        lgQuery.prototype.toggleClass = function (className) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            if (this.hasClass(className)) {\r\n                this.removeClass(className);\r\n            }\r\n            else {\r\n                this.addClass(className);\r\n            }\r\n            return this;\r\n        };\r\n        lgQuery.prototype.css = function (property, value) {\r\n            var _this = this;\r\n            this._each(function (el) {\r\n                _this._setCssVendorPrefix(el, property, value);\r\n            });\r\n            return this;\r\n        };\r\n        // Need to pass separate namespaces for separate elements\r\n        lgQuery.prototype.on = function (events, listener) {\r\n            var _this = this;\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            events.split(' ').forEach(function (event) {\r\n                if (!Array.isArray(lgQuery.eventListeners[event])) {\r\n                    lgQuery.eventListeners[event] = [];\r\n                }\r\n                lgQuery.eventListeners[event].push(listener);\r\n                _this.selector.addEventListener(event.split('.')[0], listener);\r\n            });\r\n            return this;\r\n        };\r\n        // @todo - test this\r\n        lgQuery.prototype.once = function (event, listener) {\r\n            var _this = this;\r\n            this.on(event, function () {\r\n                _this.off(event);\r\n                listener(event);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.off = function (event) {\r\n            var _this = this;\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            Object.keys(lgQuery.eventListeners).forEach(function (eventName) {\r\n                if (_this.isEventMatched(event, eventName)) {\r\n                    lgQuery.eventListeners[eventName].forEach(function (listener) {\r\n                        _this.selector.removeEventListener(eventName.split('.')[0], listener);\r\n                    });\r\n                    lgQuery.eventListeners[eventName] = [];\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.trigger = function (event, detail) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            var customEvent = new CustomEvent(event.split('.')[0], {\r\n                detail: detail || null,\r\n            });\r\n            this.firstElement.dispatchEvent(customEvent);\r\n            return this;\r\n        };\r\n        // Does not support IE\r\n        lgQuery.prototype.load = function (url) {\r\n            var _this = this;\r\n            fetch(url).then(function (res) {\r\n                _this.selector.innerHTML = res;\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.html = function (html) {\r\n            if (html === undefined) {\r\n                if (!this.firstElement) {\r\n                    return '';\r\n                }\r\n                return this.firstElement.innerHTML;\r\n            }\r\n            this._each(function (el) {\r\n                el.innerHTML = html;\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.append = function (html) {\r\n            this._each(function (el) {\r\n                if (typeof html === 'string') {\r\n                    el.insertAdjacentHTML('beforeend', html);\r\n                }\r\n                else {\r\n                    el.appendChild(html);\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.prepend = function (html) {\r\n            this._each(function (el) {\r\n                el.insertAdjacentHTML('afterbegin', html);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.remove = function () {\r\n            this._each(function (el) {\r\n                el.parentNode.removeChild(el);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.empty = function () {\r\n            this._each(function (el) {\r\n                el.innerHTML = '';\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.scrollTop = function (scrollTop) {\r\n            if (scrollTop !== undefined) {\r\n                document.body.scrollTop = scrollTop;\r\n                document.documentElement.scrollTop = scrollTop;\r\n                return this;\r\n            }\r\n            else {\r\n                return (window.pageYOffset ||\r\n                    document.documentElement.scrollTop ||\r\n                    document.body.scrollTop ||\r\n                    0);\r\n            }\r\n        };\r\n        lgQuery.prototype.scrollLeft = function (scrollLeft) {\r\n            if (scrollLeft !== undefined) {\r\n                document.body.scrollLeft = scrollLeft;\r\n                document.documentElement.scrollLeft = scrollLeft;\r\n                return this;\r\n            }\r\n            else {\r\n                return (window.pageXOffset ||\r\n                    document.documentElement.scrollLeft ||\r\n                    document.body.scrollLeft ||\r\n                    0);\r\n            }\r\n        };\r\n        lgQuery.prototype.offset = function () {\r\n            if (!this.firstElement) {\r\n                return {\r\n                    left: 0,\r\n                    top: 0,\r\n                };\r\n            }\r\n            var rect = this.firstElement.getBoundingClientRect();\r\n            var bodyMarginLeft = $LG('body').style().marginLeft;\r\n            // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\r\n            return {\r\n                left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\r\n                top: rect.top + this.scrollTop(),\r\n            };\r\n        };\r\n        lgQuery.prototype.style = function () {\r\n            if (!this.firstElement) {\r\n                return {};\r\n            }\r\n            return (this.firstElement.currentStyle ||\r\n                window.getComputedStyle(this.firstElement));\r\n        };\r\n        // Width without padding and border even if box-sizing is used.\r\n        lgQuery.prototype.width = function () {\r\n            var style = this.style();\r\n            return (this.firstElement.clientWidth -\r\n                parseFloat(style.paddingLeft) -\r\n                parseFloat(style.paddingRight));\r\n        };\r\n        // Height without padding and border even if box-sizing is used.\r\n        lgQuery.prototype.height = function () {\r\n            var style = this.style();\r\n            return (this.firstElement.clientHeight -\r\n                parseFloat(style.paddingTop) -\r\n                parseFloat(style.paddingBottom));\r\n        };\r\n        lgQuery.eventListeners = {};\r\n        return lgQuery;\r\n    }());\r\n    function $LG(selector) {\r\n        return new lgQuery(selector);\r\n    }\n\n    var defaultDynamicOptions = [\r\n        'src',\r\n        'sources',\r\n        'subHtml',\r\n        'subHtmlUrl',\r\n        'html',\r\n        'video',\r\n        'poster',\r\n        'slideName',\r\n        'responsive',\r\n        'srcset',\r\n        'sizes',\r\n        'iframe',\r\n        'downloadUrl',\r\n        'width',\r\n        'facebookShareUrl',\r\n        'tweetText',\r\n        'iframeTitle',\r\n        'twitterShareUrl',\r\n        'pinterestShareUrl',\r\n        'pinterestText',\r\n        'fbHtml',\r\n        'disqusIdentifier',\r\n        'disqusUrl',\r\n    ];\r\n    // Convert html data-attribute to camalcase\r\n    function convertToData(attr) {\r\n        // FInd a way for lgsize\r\n        if (attr === 'href') {\r\n            return 'src';\r\n        }\r\n        attr = attr.replace('data-', '');\r\n        attr = attr.charAt(0).toLowerCase() + attr.slice(1);\r\n        attr = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n        return attr;\r\n    }\r\n    var utils = {\r\n        /**\r\n         * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\r\n         */\r\n        getSize: function (el, container, spacing, defaultLgSize) {\r\n            if (spacing === void 0) { spacing = 0; }\r\n            var LGel = $LG(el);\r\n            var lgSize = LGel.attr('data-lg-size') || defaultLgSize;\r\n            if (!lgSize) {\r\n                return;\r\n            }\r\n            var isResponsiveSizes = lgSize.split(',');\r\n            // if at-least two viewport sizes are available\r\n            if (isResponsiveSizes[1]) {\r\n                var wWidth = window.innerWidth;\r\n                for (var i = 0; i < isResponsiveSizes.length; i++) {\r\n                    var size_1 = isResponsiveSizes[i];\r\n                    var responsiveWidth = parseInt(size_1.split('-')[2], 10);\r\n                    if (responsiveWidth > wWidth) {\r\n                        lgSize = size_1;\r\n                        break;\r\n                    }\r\n                    // take last item as last option\r\n                    if (i === isResponsiveSizes.length - 1) {\r\n                        lgSize = size_1;\r\n                    }\r\n                }\r\n            }\r\n            var size = lgSize.split('-');\r\n            var width = parseInt(size[0], 10);\r\n            var height = parseInt(size[1], 10);\r\n            var cWidth = container.width();\r\n            var cHeight = container.height() - spacing;\r\n            var maxWidth = Math.min(cWidth, width);\r\n            var maxHeight = Math.min(cHeight, height);\r\n            var ratio = Math.min(maxWidth / width, maxHeight / height);\r\n            return { width: width * ratio, height: height * ratio };\r\n        },\r\n        /**\r\n         * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\r\n         * @param {jQuery Element}\r\n         * @returns {String} Transform CSS string\r\n         */\r\n        getTransform: function (el, container, top, bottom, imageSize) {\r\n            if (!imageSize) {\r\n                return;\r\n            }\r\n            var LGel = $LG(el).find('img').first();\r\n            if (!LGel.get()) {\r\n                return;\r\n            }\r\n            var containerRect = container.get().getBoundingClientRect();\r\n            var wWidth = containerRect.width;\r\n            // using innerWidth to include mobile safari bottom bar\r\n            var wHeight = container.height() - (top + bottom);\r\n            var elWidth = LGel.width();\r\n            var elHeight = LGel.height();\r\n            var elStyle = LGel.style();\r\n            var x = (wWidth - elWidth) / 2 -\r\n                LGel.offset().left +\r\n                (parseFloat(elStyle.paddingLeft) || 0) +\r\n                (parseFloat(elStyle.borderLeft) || 0) +\r\n                $LG(window).scrollLeft() +\r\n                containerRect.left;\r\n            var y = (wHeight - elHeight) / 2 -\r\n                LGel.offset().top +\r\n                (parseFloat(elStyle.paddingTop) || 0) +\r\n                (parseFloat(elStyle.borderTop) || 0) +\r\n                $LG(window).scrollTop() +\r\n                top;\r\n            var scX = elWidth / imageSize.width;\r\n            var scY = elHeight / imageSize.height;\r\n            var transform = 'translate3d(' +\r\n                (x *= -1) +\r\n                'px, ' +\r\n                (y *= -1) +\r\n                'px, 0) scale3d(' +\r\n                scX +\r\n                ', ' +\r\n                scY +\r\n                ', 1)';\r\n            return transform;\r\n        },\r\n        getIframeMarkup: function (src, iframeWidth, iframeHeight, iframeTitle) {\r\n            var title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\r\n            return \"<div class=\\\"lg-video-cont lg-has-iframe\\\" style=\\\"width:\" + iframeWidth + \"; height: \" + iframeHeight + \"\\\">\\n                    <iframe class=\\\"lg-object\\\" frameborder=\\\"0\\\" \" + title + \" src=\\\"\" + src + \"\\\"  allowfullscreen=\\\"true\\\"></iframe>\\n                </div>\";\r\n        },\r\n        getImgMarkup: function (index, src, altAttr, srcset, sizes, sources) {\r\n            var srcsetAttr = srcset ? \"srcset=\\\"\" + srcset + \"\\\"\" : '';\r\n            var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\"\" : '';\r\n            var imgMarkup = \"<img \" + altAttr + \" \" + srcsetAttr + \"  \" + sizesAttr + \" class=\\\"lg-object lg-image\\\" data-index=\\\"\" + index + \"\\\" src=\\\"\" + src + \"\\\" />\";\r\n            var sourceTag = '';\r\n            if (sources) {\r\n                var sourceObj = typeof sources === 'string' ? JSON.parse(sources) : sources;\r\n                sourceTag = sourceObj.map(function (source) {\r\n                    var attrs = '';\r\n                    Object.keys(source).forEach(function (key) {\r\n                        // Do not remove the first space as it is required to separate the attributes\r\n                        attrs += \" \" + key + \"=\\\"\" + source[key] + \"\\\"\";\r\n                    });\r\n                    return \"<source \" + attrs + \"></source>\";\r\n                });\r\n            }\r\n            return \"\" + sourceTag + imgMarkup;\r\n        },\r\n        // Get src from responsive src\r\n        getResponsiveSrc: function (srcItms) {\r\n            var rsWidth = [];\r\n            var rsSrc = [];\r\n            var src = '';\r\n            for (var i = 0; i < srcItms.length; i++) {\r\n                var _src = srcItms[i].split(' ');\r\n                // Manage empty space\r\n                if (_src[0] === '') {\r\n                    _src.splice(0, 1);\r\n                }\r\n                rsSrc.push(_src[0]);\r\n                rsWidth.push(_src[1]);\r\n            }\r\n            var wWidth = window.innerWidth;\r\n            for (var j = 0; j < rsWidth.length; j++) {\r\n                if (parseInt(rsWidth[j], 10) > wWidth) {\r\n                    src = rsSrc[j];\r\n                    break;\r\n                }\r\n            }\r\n            return src;\r\n        },\r\n        isImageLoaded: function (img) {\r\n            if (!img)\r\n                return false;\r\n            // During the onload event, IE correctly identifies any images that\r\n            // weren’t downloaded as not complete. Others should too. Gecko-based\r\n            // browsers act like NS4 in that they report this incorrectly.\r\n            if (!img.complete) {\r\n                return false;\r\n            }\r\n            // However, they do have two very useful properties: naturalWidth and\r\n            // naturalHeight. These give the true size of the image. If it failed\r\n            // to load, either of these should be zero.\r\n            if (img.naturalWidth === 0) {\r\n                return false;\r\n            }\r\n            // No other way of checking: assume it’s ok.\r\n            return true;\r\n        },\r\n        getVideoPosterMarkup: function (_poster, dummyImg, videoContStyle, _isVideo) {\r\n            var videoClass = '';\r\n            if (_isVideo && _isVideo.youtube) {\r\n                videoClass = 'lg-has-youtube';\r\n            }\r\n            else if (_isVideo && _isVideo.vimeo) {\r\n                videoClass = 'lg-has-vimeo';\r\n            }\r\n            else {\r\n                videoClass = 'lg-has-html5';\r\n            }\r\n            return \"<div class=\\\"lg-video-cont \" + videoClass + \"\\\" style=\\\"\" + videoContStyle + \"\\\">\\n                <div class=\\\"lg-video-play-button\\\">\\n                <svg\\n                    viewBox=\\\"0 0 20 20\\\"\\n                    preserveAspectRatio=\\\"xMidYMid\\\"\\n                    focusable=\\\"false\\\"\\n                    aria-labelledby=\\\"Play video\\\"\\n                    role=\\\"img\\\"\\n                    class=\\\"lg-video-play-icon\\\"\\n                >\\n                    <title>Play video</title>\\n                    <polygon class=\\\"lg-video-play-icon-inner\\\" points=\\\"1,0 20,10 1,20\\\"></polygon>\\n                </svg>\\n                <svg class=\\\"lg-video-play-icon-bg\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle></svg>\\n                <svg class=\\\"lg-video-play-icon-circle\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle>\\n                </svg>\\n            </div>\\n            \" + (dummyImg || '') + \"\\n            <img class=\\\"lg-object lg-video-poster\\\" src=\\\"\" + _poster + \"\\\" />\\n        </div>\";\r\n        },\r\n        /**\r\n         * @desc Create dynamic elements array from gallery items when dynamic option is false\r\n         * It helps to avoid frequent DOM interaction\r\n         * and avoid multiple checks for dynamic elments\r\n         *\r\n         * @returns {Array} dynamicEl\r\n         */\r\n        getDynamicOptions: function (items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {\r\n            var dynamicElements = [];\r\n            var availableDynamicOptions = __spreadArrays(defaultDynamicOptions, extraProps);\r\n            [].forEach.call(items, function (item) {\r\n                var dynamicEl = {};\r\n                for (var i = 0; i < item.attributes.length; i++) {\r\n                    var attr = item.attributes[i];\r\n                    if (attr.specified) {\r\n                        var dynamicAttr = convertToData(attr.name);\r\n                        var label = '';\r\n                        if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\r\n                            label = dynamicAttr;\r\n                        }\r\n                        if (label) {\r\n                            dynamicEl[label] = attr.value;\r\n                        }\r\n                    }\r\n                }\r\n                var currentItem = $LG(item);\r\n                var alt = currentItem.find('img').first().attr('alt');\r\n                var title = currentItem.attr('title');\r\n                var thumb = exThumbImage\r\n                    ? currentItem.attr(exThumbImage)\r\n                    : currentItem.find('img').first().attr('src');\r\n                dynamicEl.thumb = thumb;\r\n                if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\r\n                    dynamicEl.subHtml = title || alt || '';\r\n                }\r\n                dynamicEl.alt = alt || title || '';\r\n                dynamicElements.push(dynamicEl);\r\n            });\r\n            return dynamicElements;\r\n        },\r\n        isMobile: function () {\r\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        },\r\n    };\n\n    var lightGalleryCoreSettings = {\r\n        mode: 'lg-slide',\r\n        easing: 'ease',\r\n        speed: 400,\r\n        licenseKey: '0000-0000-000-0000',\r\n        height: '100%',\r\n        width: '100%',\r\n        addClass: '',\r\n        startClass: 'lg-start-zoom',\r\n        backdropDuration: 300,\r\n        container: document.body,\r\n        startAnimationDuration: 400,\r\n        zoomFromOrigin: true,\r\n        hideBarsDelay: 0,\r\n        showBarsAfter: 10000,\r\n        slideDelay: 0,\r\n        supportLegacyBrowser: true,\r\n        allowMediaOverlap: false,\r\n        videoMaxSize: '1280-720',\r\n        defaultCaptionHeight: 0,\r\n        ariaLabelledby: '',\r\n        ariaDescribedby: '',\r\n        closable: true,\r\n        swipeToClose: true,\r\n        closeOnTap: true,\r\n        showCloseIcon: true,\r\n        showMaximizeIcon: false,\r\n        loop: true,\r\n        escKey: true,\r\n        keyPress: true,\r\n        controls: true,\r\n        slideEndAnimation: true,\r\n        hideControlOnEnd: false,\r\n        mousewheel: false,\r\n        getCaptionFromTitleOrAlt: true,\r\n        appendSubHtmlTo: '.lg-sub-html',\r\n        subHtmlSelectorRelative: false,\r\n        preload: 2,\r\n        numberOfSlideItemsInDom: 10,\r\n        showAfterLoad: true,\r\n        selector: '',\r\n        selectWithin: '',\r\n        nextHtml: '',\r\n        prevHtml: '',\r\n        index: 0,\r\n        iframeWidth: '100%',\r\n        iframeHeight: '100%',\r\n        download: true,\r\n        counter: true,\r\n        appendCounterTo: '.lg-toolbar',\r\n        swipeThreshold: 50,\r\n        enableSwipe: true,\r\n        enableDrag: true,\r\n        dynamic: false,\r\n        dynamicEl: [],\r\n        extraProps: [],\r\n        exThumbImage: '',\r\n        isMobile: undefined,\r\n        mobileSettings: {\r\n            controls: false,\r\n            showCloseIcon: false,\r\n            download: false,\r\n        },\r\n        plugins: [],\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n    };\n\n    // @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\r\n    // @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\r\n    // Unique id for each gallery\r\n    var lgId = 0;\r\n    var LightGallery = /** @class */ (function () {\r\n        function LightGallery(element, options) {\r\n            this.lgOpened = false;\r\n            this.index = 0;\r\n            // lightGallery modules\r\n            this.plugins = [];\r\n            // false when lightGallery load first slide content;\r\n            this.lGalleryOn = false;\r\n            // True when a slide animation is in progress\r\n            this.lgBusy = false;\r\n            this.currentItemsInDom = [];\r\n            // Scroll top value before lightGallery is opened\r\n            this.prevScrollTop = 0;\r\n            this.isDummyImageRemoved = false;\r\n            this.mediaContainerPosition = {\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            if (!element) {\r\n                return this;\r\n            }\r\n            lgId++;\r\n            this.lgId = lgId;\r\n            this.el = element;\r\n            this.LGel = $LG(element);\r\n            this.generateSettings(options);\r\n            this.buildModules();\r\n            // When using dynamic mode, ensure dynamicEl is an array\r\n            if (this.settings.dynamic &&\r\n                this.settings.dynamicEl !== undefined &&\r\n                !Array.isArray(this.settings.dynamicEl)) {\r\n                throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\r\n            }\r\n            this.galleryItems = this.getItems();\r\n            this.normalizeSettings();\r\n            // Gallery items\r\n            this.init();\r\n            this.validateLicense();\r\n            return this;\r\n        }\r\n        LightGallery.prototype.generateSettings = function (options) {\r\n            // lightGallery settings\r\n            this.settings = __assign(__assign({}, lightGalleryCoreSettings), options);\r\n            if (this.settings.isMobile &&\r\n                typeof this.settings.isMobile === 'function'\r\n                ? this.settings.isMobile()\r\n                : utils.isMobile()) {\r\n                var mobileSettings = __assign(__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);\r\n                this.settings = __assign(__assign({}, this.settings), mobileSettings);\r\n            }\r\n        };\r\n        LightGallery.prototype.normalizeSettings = function () {\r\n            if (this.settings.slideEndAnimation) {\r\n                this.settings.hideControlOnEnd = false;\r\n            }\r\n            if (!this.settings.closable) {\r\n                this.settings.swipeToClose = false;\r\n            }\r\n            // And reset it on close to get the correct value next time\r\n            this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n            // At the moment, Zoom from image doesn't support dynamic options\r\n            // @todo add zoomFromOrigin support for dynamic images\r\n            if (this.settings.dynamic) {\r\n                this.zoomFromOrigin = false;\r\n            }\r\n            if (!this.settings.container) {\r\n                this.settings.container = document.body;\r\n            }\r\n            // settings.preload should not be grater than $item.length\r\n            this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);\r\n        };\r\n        LightGallery.prototype.init = function () {\r\n            var _this = this;\r\n            this.addSlideVideoInfo(this.galleryItems);\r\n            this.buildStructure();\r\n            this.LGel.trigger(lGEvents.init, {\r\n                instance: this,\r\n            });\r\n            if (this.settings.keyPress) {\r\n                this.keyPress();\r\n            }\r\n            setTimeout(function () {\r\n                _this.enableDrag();\r\n                _this.enableSwipe();\r\n            }, 50);\r\n            this.arrow();\r\n            if (this.settings.mousewheel) {\r\n                this.mousewheel();\r\n            }\r\n            if (!this.settings.dynamic) {\r\n                this.openGalleryOnItemClick();\r\n            }\r\n        };\r\n        LightGallery.prototype.openGalleryOnItemClick = function () {\r\n            var _this = this;\r\n            var _loop_1 = function (index) {\r\n                var element = this_1.items[index];\r\n                var $element = $LG(element);\r\n                // Using different namespace for click because click event should not unbind if selector is same object('this')\r\n                // @todo manage all event listners - should have namespace that represent element\r\n                var uuid = lgQuery.generateUUID();\r\n                $element\r\n                    .attr('data-lg-id', uuid)\r\n                    .on(\"click.lgcustom-item-\" + uuid, function (e) {\r\n                    e.preventDefault();\r\n                    var currentItemIndex = _this.settings.index || index;\r\n                    _this.openGallery(currentItemIndex, element);\r\n                });\r\n            };\r\n            var this_1 = this;\r\n            // Using for loop instead of using bubbling as the items can be any html element.\r\n            for (var index = 0; index < this.items.length; index++) {\r\n                _loop_1(index);\r\n            }\r\n        };\r\n        /**\r\n         * Module constructor\r\n         * Modules are build incrementally.\r\n         * Gallery should be opened only once all the modules are initialized.\r\n         * use moduleBuildTimeout to make sure this\r\n         */\r\n        LightGallery.prototype.buildModules = function () {\r\n            var _this = this;\r\n            this.settings.plugins.forEach(function (plugin) {\r\n                _this.plugins.push(new plugin(_this, $LG));\r\n            });\r\n        };\r\n        LightGallery.prototype.validateLicense = function () {\r\n            if (!this.settings.licenseKey) {\r\n                console.error('Please provide a valid license key');\r\n            }\r\n            else if (this.settings.licenseKey === '0000-0000-000-0000') {\r\n                console.warn(\"lightGallery: \" + this.settings.licenseKey + \" license key is not valid for production use\");\r\n            }\r\n        };\r\n        LightGallery.prototype.getSlideItem = function (index) {\r\n            return $LG(this.getSlideItemId(index));\r\n        };\r\n        LightGallery.prototype.getSlideItemId = function (index) {\r\n            return \"#lg-item-\" + this.lgId + \"-\" + index;\r\n        };\r\n        LightGallery.prototype.getIdName = function (id) {\r\n            return id + \"-\" + this.lgId;\r\n        };\r\n        LightGallery.prototype.getElementById = function (id) {\r\n            return $LG(\"#\" + this.getIdName(id));\r\n        };\r\n        LightGallery.prototype.manageSingleSlideClassName = function () {\r\n            if (this.galleryItems.length < 2) {\r\n                this.outer.addClass('lg-single-item');\r\n            }\r\n            else {\r\n                this.outer.removeClass('lg-single-item');\r\n            }\r\n        };\r\n        LightGallery.prototype.buildStructure = function () {\r\n            var _this = this;\r\n            var container = this.$container && this.$container.get();\r\n            if (container) {\r\n                return;\r\n            }\r\n            var controls = '';\r\n            var subHtmlCont = '';\r\n            // Create controls\r\n            if (this.settings.controls) {\r\n                controls = \"<button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-prev') + \"\\\" aria-label=\\\"Previous slide\\\" class=\\\"lg-prev lg-icon\\\"> \" + this.settings.prevHtml + \" </button>\\n                <button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-next') + \"\\\" aria-label=\\\"Next slide\\\" class=\\\"lg-next lg-icon\\\"> \" + this.settings.nextHtml + \" </button>\";\r\n            }\r\n            if (this.settings.appendSubHtmlTo === '.lg-sub-html') {\r\n                subHtmlCont =\r\n                    '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\r\n            }\r\n            var addClasses = '';\r\n            if (this.settings.allowMediaOverlap) {\r\n                // Do not remove space before last single quote\r\n                addClasses += 'lg-media-overlap ';\r\n            }\r\n            var ariaLabelledby = this.settings.ariaLabelledby\r\n                ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\r\n                : '';\r\n            var ariaDescribedby = this.settings.ariaDescribedby\r\n                ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\r\n                : '';\r\n            var containerClassName = \"lg-container \" + this.settings.addClass + \" \" + (document.body !== this.settings.container ? 'lg-inline' : '');\r\n            var closeIcon = this.settings.closable && this.settings.showCloseIcon\r\n                ? \"<button type=\\\"button\\\" aria-label=\\\"Close gallery\\\" id=\\\"\" + this.getIdName('lg-close') + \"\\\" class=\\\"lg-close lg-icon\\\"></button>\"\r\n                : '';\r\n            var maximizeIcon = this.settings.showMaximizeIcon\r\n                ? \"<button type=\\\"button\\\" aria-label=\\\"Toggle maximize\\\" id=\\\"\" + this.getIdName('lg-maximize') + \"\\\" class=\\\"lg-maximize lg-icon\\\"></button>\"\r\n                : '';\r\n            var template = \"\\n        <div class=\\\"\" + containerClassName + \"\\\" id=\\\"\" + this.getIdName('lg-container') + \"\\\" tabindex=\\\"-1\\\" aria-modal=\\\"true\\\" \" + ariaLabelledby + \" \" + ariaDescribedby + \" role=\\\"dialog\\\"\\n        >\\n            <div id=\\\"\" + this.getIdName('lg-backdrop') + \"\\\" class=\\\"lg-backdrop\\\"></div>\\n\\n            <div id=\\\"\" + this.getIdName('lg-outer') + \"\\\" class=\\\"lg-outer lg-use-css3 lg-css3 lg-hide-items \" + addClasses + \" \\\">\\n                    <div id=\\\"\" + this.getIdName('lg-content') + \"\\\" class=\\\"lg\\\" style=\\\"width: \" + this.settings.width + \"; height:\" + this.settings.height + \"\\\">\\n                        <div id=\\\"\" + this.getIdName('lg-inner') + \"\\\" class=\\\"lg-inner\\\"></div>\\n                        <div id=\\\"\" + this.getIdName('lg-toolbar') + \"\\\" class=\\\"lg-toolbar lg-group\\\">\\n                        \" + maximizeIcon + \"\\n                        \" + closeIcon + \"\\n                    </div>\\n                    \" + controls + \"\\n                    <div id=\\\"\" + this.getIdName('lg-components') + \"\\\" class=\\\"lg-components\\\">\\n                        \" + subHtmlCont + \"\\n                    </div>\\n                </div> \\n            </div>\\n        </div>\\n        \";\r\n            $LG(this.settings.container)\r\n                .css('position', 'relative')\r\n                .append(template);\r\n            this.outer = this.getElementById('lg-outer');\r\n            this.$lgContent = this.getElementById('lg-content');\r\n            this.$lgComponents = this.getElementById('lg-components');\r\n            this.$backdrop = this.getElementById('lg-backdrop');\r\n            this.$container = this.getElementById('lg-container');\r\n            this.$inner = this.getElementById('lg-inner');\r\n            this.$toolbar = this.getElementById('lg-toolbar');\r\n            this.$backdrop.css('transition-duration', this.settings.backdropDuration + 'ms');\r\n            var outerClassNames = this.settings.mode + \" \";\r\n            this.manageSingleSlideClassName();\r\n            if (this.settings.enableDrag) {\r\n                outerClassNames += 'lg-grab ';\r\n            }\r\n            if (this.settings.showAfterLoad) {\r\n                outerClassNames += 'lg-show-after-load';\r\n            }\r\n            this.outer.addClass(outerClassNames);\r\n            this.$inner.css('transition-timing-function', this.settings.easing);\r\n            this.$inner.css('transition-duration', this.settings.speed + 'ms');\r\n            if (this.settings.download) {\r\n                this.$toolbar.append(\"<a id=\\\"\" + this.getIdName('lg-download') + \"\\\" target=\\\"_blank\\\" aria-label=\\\"Download\\\" download class=\\\"lg-download lg-icon\\\"></a>\");\r\n            }\r\n            this.counter();\r\n            $LG(window).on(\"resize.lg.global\" + this.lgId + \" orientationchange.lg.global\" + this.lgId, function () {\r\n                _this.refreshOnResize();\r\n            });\r\n            this.hideBars();\r\n            this.manageCloseGallery();\r\n            this.toggleMaximize();\r\n            this.initModules();\r\n        };\r\n        LightGallery.prototype.refreshOnResize = function () {\r\n            if (this.lgOpened) {\r\n                var currentGalleryItem = this.galleryItems[this.index];\r\n                var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n                var _a = this.getMediaContainerPosition(), top_1 = _a.top, bottom = _a.bottom;\r\n                this.currentImageSize = utils.getSize(this.items[this.index], this.$lgContent, top_1 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                if (videoInfo) {\r\n                    this.resizeVideoSlide(this.index, this.currentImageSize);\r\n                }\r\n                if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\r\n                    var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                    this.outer\r\n                        .find('.lg-current .lg-dummy-img')\r\n                        .first()\r\n                        .attr('style', imgStyle);\r\n                }\r\n                this.LGel.trigger(lGEvents.containerResize);\r\n            }\r\n        };\r\n        LightGallery.prototype.resizeVideoSlide = function (index, imageSize) {\r\n            var lgVideoStyle = this.getVideoContStyle(imageSize);\r\n            var currentSlide = this.getSlideItem(index);\r\n            currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\r\n        };\r\n        /**\r\n         * Update slides dynamically.\r\n         * Add, edit or delete slides dynamically when lightGallery is opened.\r\n         * Modify the current gallery items and pass it via updateSlides method\r\n         * @note\r\n         * - Do not mutate existing lightGallery items directly.\r\n         * - Always pass new list of gallery items\r\n         * - You need to take care of thumbnails outside the gallery if any\r\n         * @param items Gallery items\r\n         * @param index After the update operation, which slide gallery should navigate to\r\n         * @category lGPublicMethods\r\n         * @example\r\n         * const plugin = lightGallery();\r\n         *\r\n         * // Adding slides dynamically\r\n         * let galleryItems = [\r\n         * // Access existing lightGallery items\r\n         * // galleryItems are automatically generated internally from the gallery HTML markup\r\n         * // or directly from galleryItems when dynamic gallery is used\r\n         *   ...plugin.galleryItems,\r\n         *     ...[\r\n         *       {\r\n         *         src: 'img/img-1.png',\r\n         *           thumb: 'img/thumb1.png',\r\n         *         },\r\n         *     ],\r\n         *   ];\r\n         *   plugin.updateSlides(\r\n         *     galleryItems,\r\n         *     plugin.index,\r\n         *   );\r\n         *\r\n         *\r\n         * // Remove slides dynamically\r\n         * galleryItems = JSON.parse(\r\n         *   JSON.stringify(updateSlideInstance.galleryItems),\r\n         * );\r\n         * galleryItems.shift();\r\n         * updateSlideInstance.updateSlides(galleryItems, 1);\r\n         * @see <a href=\"/demos/update-slides/\">Demo</a>\r\n         */\r\n        LightGallery.prototype.updateSlides = function (items, index) {\r\n            if (this.index > items.length - 1) {\r\n                this.index = items.length - 1;\r\n            }\r\n            if (items.length === 1) {\r\n                this.index = 0;\r\n            }\r\n            if (!items.length) {\r\n                this.closeGallery();\r\n                return;\r\n            }\r\n            var currentSrc = this.galleryItems[index].src;\r\n            this.addSlideVideoInfo(items);\r\n            this.galleryItems = items;\r\n            this.$inner.empty();\r\n            this.currentItemsInDom = [];\r\n            var _index = 0;\r\n            // Find the current index based on source value of the slide\r\n            this.galleryItems.some(function (galleryItem, itemIndex) {\r\n                if (galleryItem.src === currentSrc) {\r\n                    _index = itemIndex;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            this.currentItemsInDom = this.organizeSlideItems(_index, -1);\r\n            this.loadContent(_index, true);\r\n            this.getSlideItem(_index).addClass('lg-current');\r\n            this.index = _index;\r\n            this.updateCurrentCounter(_index);\r\n            this.updateCounterTotal();\r\n            this.LGel.trigger(lGEvents.updateSlides);\r\n        };\r\n        // Get gallery items based on multiple conditions\r\n        LightGallery.prototype.getItems = function () {\r\n            // Gallery items\r\n            this.items = [];\r\n            if (!this.settings.dynamic) {\r\n                if (this.settings.selector === 'this') {\r\n                    this.items.push(this.el);\r\n                }\r\n                else if (this.settings.selector) {\r\n                    if (typeof this.settings.selector === 'string') {\r\n                        if (this.settings.selectWithin) {\r\n                            var selectWithin = $LG(this.settings.selectWithin);\r\n                            this.items = selectWithin\r\n                                .find(this.settings.selector)\r\n                                .get();\r\n                        }\r\n                        else {\r\n                            this.items = this.el.querySelectorAll(this.settings.selector);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.items = this.settings.selector;\r\n                    }\r\n                }\r\n                else {\r\n                    this.items = this.el.children;\r\n                }\r\n                return utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);\r\n            }\r\n            else {\r\n                return this.settings.dynamicEl || [];\r\n            }\r\n        };\r\n        /**\r\n         * Open lightGallery.\r\n         * Open gallery with specific slide by passing index of the slide as parameter.\r\n         * @category lGPublicMethods\r\n         * @param {Number} index  - index of the slide\r\n         * @param {HTMLElement} element - Which image lightGallery should zoom from\r\n         *\r\n         * @example\r\n         * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\r\n         * const dynamicGallery = lightGallery($dynamicGallery, {\r\n         *     dynamic: true,\r\n         *     dynamicEl: [\r\n         *         {\r\n         *              src: 'img/1.jpg',\r\n         *              thumb: 'img/thumb-1.jpg',\r\n         *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\r\n         *         },\r\n         *         ...\r\n         *     ],\r\n         * });\r\n         * $dynamicGallery.addEventListener('click', function () {\r\n         *     // Starts with third item.(Optional).\r\n         *     // This is useful if you want use dynamic mode with\r\n         *     // custom thumbnails (thumbnails outside gallery),\r\n         *     dynamicGallery.openGallery(2);\r\n         * });\r\n         *\r\n         */\r\n        LightGallery.prototype.openGallery = function (index, element) {\r\n            var _this = this;\r\n            if (index === void 0) { index = this.settings.index; }\r\n            // prevent accidental double execution\r\n            if (this.lgOpened)\r\n                return;\r\n            this.lgOpened = true;\r\n            this.outer.get().focus();\r\n            this.outer.removeClass('lg-hide-items');\r\n            // Add display block, but still has opacity 0\r\n            this.$container.addClass('lg-show');\r\n            var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);\r\n            this.currentItemsInDom = itemsToBeInsertedToDom;\r\n            var items = '';\r\n            itemsToBeInsertedToDom.forEach(function (item) {\r\n                items = items + (\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n            });\r\n            this.$inner.append(items);\r\n            this.addHtml(index);\r\n            var transform = '';\r\n            this.mediaContainerPosition = this.getMediaContainerPosition();\r\n            var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n            if (!this.settings.allowMediaOverlap) {\r\n                this.setMediaContainerPosition(top, bottom);\r\n            }\r\n            if (this.zoomFromOrigin && element) {\r\n                this.currentImageSize = utils.getSize(element, this.$lgContent, top + bottom, this.galleryItems[index].__slideVideoInfo &&\r\n                    this.settings.videoMaxSize);\r\n                transform = utils.getTransform(element, this.$lgContent, top, bottom, this.currentImageSize);\r\n            }\r\n            if (!this.zoomFromOrigin || !transform) {\r\n                this.outer.addClass(this.settings.startClass);\r\n                this.getSlideItem(index).removeClass('lg-complete');\r\n            }\r\n            var timeout = this.settings.zoomFromOrigin\r\n                ? 100\r\n                : this.settings.backdropDuration;\r\n            setTimeout(function () {\r\n                _this.outer.addClass('lg-components-open');\r\n            }, timeout);\r\n            this.index = index;\r\n            this.LGel.trigger(lGEvents.beforeOpen);\r\n            // add class lg-current to remove initial transition\r\n            this.getSlideItem(index).addClass('lg-current');\r\n            this.lGalleryOn = false;\r\n            // Store the current scroll top value to scroll back after closing the gallery..\r\n            this.prevScrollTop = $LG(window).scrollTop();\r\n            setTimeout(function () {\r\n                // Need to check both zoomFromOrigin and transform values as we need to set set the\r\n                // default opening animation if user missed to add the lg-size attribute\r\n                if (_this.zoomFromOrigin && transform) {\r\n                    var currentSlide_1 = _this.getSlideItem(index);\r\n                    currentSlide_1.css('transform', transform);\r\n                    setTimeout(function () {\r\n                        currentSlide_1\r\n                            .addClass('lg-start-progress lg-start-end-progress')\r\n                            .css('transition-duration', _this.settings.startAnimationDuration + 'ms');\r\n                        _this.outer.addClass('lg-zoom-from-image');\r\n                    });\r\n                    setTimeout(function () {\r\n                        currentSlide_1.css('transform', 'translate3d(0, 0, 0)');\r\n                    }, 100);\r\n                }\r\n                setTimeout(function () {\r\n                    _this.$backdrop.addClass('in');\r\n                    _this.$container.addClass('lg-show-in');\r\n                }, 10);\r\n                // lg-visible class resets gallery opacity to 1\r\n                if (!_this.zoomFromOrigin || !transform) {\r\n                    setTimeout(function () {\r\n                        _this.outer.addClass('lg-visible');\r\n                    }, _this.settings.backdropDuration);\r\n                }\r\n                // initiate slide function\r\n                _this.slide(index, false, false, false);\r\n                _this.LGel.trigger(lGEvents.afterOpen);\r\n            });\r\n            if (document.body === this.settings.container) {\r\n                $LG('html').addClass('lg-on');\r\n            }\r\n        };\r\n        /**\r\n         * Note - Changing the position of the media on every slide transition creates a flickering effect.\r\n         * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\r\n         * if you have dynamic captions for each media,\r\n         * you can provide an appropriate height for the captions via allowMediaOverlap option\r\n         */\r\n        LightGallery.prototype.getMediaContainerPosition = function () {\r\n            if (this.settings.allowMediaOverlap) {\r\n                return {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                };\r\n            }\r\n            var top = this.$toolbar.get().clientHeight || 0;\r\n            var captionHeight = this.settings.defaultCaptionHeight ||\r\n                this.outer.find('.lg-sub-html').get().clientHeight;\r\n            var thumbContainer = this.outer.find('.lg-thumb-outer').get();\r\n            var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\r\n            var bottom = thumbHeight + captionHeight;\r\n            return {\r\n                top: top,\r\n                bottom: bottom,\r\n            };\r\n        };\r\n        LightGallery.prototype.setMediaContainerPosition = function (top, bottom) {\r\n            if (top === void 0) { top = 0; }\r\n            if (bottom === void 0) { bottom = 0; }\r\n            this.$inner.css('top', top + 'px').css('bottom', bottom + 'px');\r\n        };\r\n        LightGallery.prototype.hideBars = function () {\r\n            var _this = this;\r\n            // Hide controllers if mouse doesn't move for some period\r\n            setTimeout(function () {\r\n                _this.outer.removeClass('lg-hide-items');\r\n                if (_this.settings.hideBarsDelay > 0) {\r\n                    _this.outer.on('mousemove.lg click.lg touchstart.lg', function () {\r\n                        _this.outer.removeClass('lg-hide-items');\r\n                        clearTimeout(_this.hideBarTimeout);\r\n                        // Timeout will be cleared on each slide movement also\r\n                        _this.hideBarTimeout = setTimeout(function () {\r\n                            _this.outer.addClass('lg-hide-items');\r\n                        }, _this.settings.hideBarsDelay);\r\n                    });\r\n                    _this.outer.trigger('mousemove.lg');\r\n                }\r\n            }, this.settings.showBarsAfter);\r\n        };\r\n        LightGallery.prototype.initPictureFill = function ($img) {\r\n            if (this.settings.supportLegacyBrowser) {\r\n                try {\r\n                    picturefill({\r\n                        elements: [$img.get()],\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    console.warn('lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.');\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *  @desc Create image counter\r\n         *  Ex: 1/10\r\n         */\r\n        LightGallery.prototype.counter = function () {\r\n            if (this.settings.counter) {\r\n                var counterHtml = \"<div class=\\\"lg-counter\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">\\n                <span id=\\\"\" + this.getIdName('lg-counter-current') + \"\\\" class=\\\"lg-counter-current\\\">\" + (this.index + 1) + \" </span> / \\n                <span id=\\\"\" + this.getIdName('lg-counter-all') + \"\\\" class=\\\"lg-counter-all\\\">\" + this.galleryItems.length + \" </span></div>\";\r\n                this.outer.find(this.settings.appendCounterTo).append(counterHtml);\r\n            }\r\n        };\r\n        /**\r\n         *  @desc add sub-html into the slide\r\n         *  @param {Number} index - index of the slide\r\n         */\r\n        LightGallery.prototype.addHtml = function (index) {\r\n            var subHtml;\r\n            var subHtmlUrl;\r\n            if (this.galleryItems[index].subHtmlUrl) {\r\n                subHtmlUrl = this.galleryItems[index].subHtmlUrl;\r\n            }\r\n            else {\r\n                subHtml = this.galleryItems[index].subHtml;\r\n            }\r\n            if (!subHtmlUrl) {\r\n                if (subHtml) {\r\n                    // get first letter of sub-html\r\n                    // if first letter starts with . or # get the html form the jQuery object\r\n                    var fL = subHtml.substring(0, 1);\r\n                    if (fL === '.' || fL === '#') {\r\n                        if (this.settings.subHtmlSelectorRelative &&\r\n                            !this.settings.dynamic) {\r\n                            subHtml = $LG(this.items)\r\n                                .eq(index)\r\n                                .find(subHtml)\r\n                                .first()\r\n                                .html();\r\n                        }\r\n                        else {\r\n                            subHtml = $LG(subHtml).first().html();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    subHtml = '';\r\n                }\r\n            }\r\n            if (this.settings.appendSubHtmlTo === '.lg-sub-html') {\r\n                if (subHtmlUrl) {\r\n                    this.outer.find('.lg-sub-html').load(subHtmlUrl);\r\n                }\r\n                else {\r\n                    this.outer.find('.lg-sub-html').html(subHtml);\r\n                }\r\n            }\r\n            else {\r\n                var currentSlide = $LG(this.getSlideItemId(index));\r\n                if (subHtmlUrl) {\r\n                    currentSlide.load(subHtmlUrl);\r\n                }\r\n                else {\r\n                    currentSlide.append(\"<div class=\\\"lg-sub-html\\\">\" + subHtml + \"</div>\");\r\n                }\r\n            }\r\n            // Add lg-empty-html class if title doesn't exist\r\n            if (typeof subHtml !== 'undefined' && subHtml !== null) {\r\n                if (subHtml === '') {\r\n                    this.outer\r\n                        .find(this.settings.appendSubHtmlTo)\r\n                        .addClass('lg-empty-html');\r\n                }\r\n                else {\r\n                    this.outer\r\n                        .find(this.settings.appendSubHtmlTo)\r\n                        .removeClass('lg-empty-html');\r\n                }\r\n            }\r\n            this.LGel.trigger(lGEvents.afterAppendSubHtml, {\r\n                index: index,\r\n            });\r\n        };\r\n        /**\r\n         *  @desc Preload slides\r\n         *  @param {Number} index - index of the slide\r\n         * @todo preload not working for the first slide, Also, should work for the first and last slide as well\r\n         */\r\n        LightGallery.prototype.preload = function (index) {\r\n            for (var i = 1; i <= this.settings.preload; i++) {\r\n                if (i >= this.galleryItems.length - index) {\r\n                    break;\r\n                }\r\n                this.loadContent(index + i, false);\r\n            }\r\n            for (var j = 1; j <= this.settings.preload; j++) {\r\n                if (index - j < 0) {\r\n                    break;\r\n                }\r\n                this.loadContent(index - j, false);\r\n            }\r\n        };\r\n        LightGallery.prototype.getDummyImgStyles = function (imageSize) {\r\n            if (!imageSize)\r\n                return '';\r\n            return \"width:\" + imageSize.width + \"px; \\n                margin-left: -\" + imageSize.width / 2 + \"px;\\n                margin-top: -\" + imageSize.height / 2 + \"px; \\n                height:\" + imageSize.height + \"px\";\r\n        };\r\n        LightGallery.prototype.getVideoContStyle = function (imageSize) {\r\n            if (!imageSize)\r\n                return '';\r\n            return \"width:\" + imageSize.width + \"px; \\n                height:\" + imageSize.height + \"px\";\r\n        };\r\n        LightGallery.prototype.getDummyImageContent = function ($currentSlide, index, alt) {\r\n            var $currentItem;\r\n            if (!this.settings.dynamic) {\r\n                $currentItem = $LG(this.items).eq(index);\r\n            }\r\n            if ($currentItem) {\r\n                var _dummyImgSrc = void 0;\r\n                if (!this.settings.exThumbImage) {\r\n                    _dummyImgSrc = $currentItem.find('img').first().attr('src');\r\n                }\r\n                else {\r\n                    _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\r\n                }\r\n                if (!_dummyImgSrc)\r\n                    return '';\r\n                var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                var dummyImgContent = \"<img \" + alt + \" style=\\\"\" + imgStyle + \"\\\" class=\\\"lg-dummy-img\\\" src=\\\"\" + _dummyImgSrc + \"\\\" />\";\r\n                $currentSlide.addClass('lg-first-slide');\r\n                this.outer.addClass('lg-first-slide-loading');\r\n                return dummyImgContent;\r\n            }\r\n            return '';\r\n        };\r\n        LightGallery.prototype.setImgMarkup = function (src, $currentSlide, index) {\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n            // Use the thumbnail as dummy image which will be resized to actual image size and\r\n            // displayed on top of actual image\r\n            var imgContent = '';\r\n            var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n            if (!this.lGalleryOn && this.zoomFromOrigin && this.currentImageSize) {\r\n                imgContent = this.getDummyImageContent($currentSlide, index, altAttr);\r\n            }\r\n            else {\r\n                imgContent = utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);\r\n            }\r\n            var imgMarkup = \"<picture class=\\\"lg-img-wrap\\\"> \" + imgContent + \"</picture>\";\r\n            $currentSlide.prepend(imgMarkup);\r\n        };\r\n        LightGallery.prototype.onLgObjectLoad = function ($el, index, delay, speed, dummyImageLoaded) {\r\n            var _this = this;\r\n            if (dummyImageLoaded) {\r\n                this.LGel.trigger(lGEvents.slideItemLoad, {\r\n                    index: index,\r\n                    delay: delay || 0,\r\n                });\r\n            }\r\n            $el.find('.lg-object')\r\n                .first()\r\n                .on('load.lg', function () {\r\n                _this.handleLgObjectLoad($el, index, delay, speed, dummyImageLoaded);\r\n            });\r\n            setTimeout(function () {\r\n                $el.find('.lg-object')\r\n                    .first()\r\n                    .on('error.lg', function () {\r\n                    $el.addClass('lg-complete lg-complete_');\r\n                    $el.html('<span class=\"lg-error-msg\">Oops... Failed to load content...</span>');\r\n                });\r\n            }, speed);\r\n        };\r\n        LightGallery.prototype.handleLgObjectLoad = function ($el, index, delay, speed, dummyImageLoaded) {\r\n            var _this = this;\r\n            setTimeout(function () {\r\n                $el.addClass('lg-complete lg-complete_');\r\n                if (!dummyImageLoaded) {\r\n                    _this.LGel.trigger(lGEvents.slideItemLoad, {\r\n                        index: index,\r\n                        delay: delay || 0,\r\n                    });\r\n                }\r\n            }, speed);\r\n        };\r\n        /**\r\n         * @desc Check the given src is video\r\n         * @param {String} src\r\n         * @return {Object} video type\r\n         * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\r\n         *\r\n         * @todo - this information can be moved to dynamicEl to avoid frequent calls\r\n         */\r\n        LightGallery.prototype.isVideo = function (src, index) {\r\n            if (!src) {\r\n                if (this.galleryItems[index].video) {\r\n                    return {\r\n                        html5: true,\r\n                    };\r\n                }\r\n                else {\r\n                    console.error('lightGallery :- data-src is not provided on slide item ' +\r\n                        (index + 1) +\r\n                        '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/');\r\n                    return;\r\n                }\r\n            }\r\n            var youtube = src.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)/i);\r\n            var vimeo = src.match(/\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)/i);\r\n            var wistia = src.match(/https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/);\r\n            if (youtube) {\r\n                return {\r\n                    youtube: youtube,\r\n                };\r\n            }\r\n            else if (vimeo) {\r\n                return {\r\n                    vimeo: vimeo,\r\n                };\r\n            }\r\n            else if (wistia) {\r\n                return {\r\n                    wistia: wistia,\r\n                };\r\n            }\r\n        };\r\n        // Add video slideInfo\r\n        LightGallery.prototype.addSlideVideoInfo = function (items) {\r\n            var _this = this;\r\n            items.forEach(function (element, index) {\r\n                element.__slideVideoInfo = _this.isVideo(element.src, index);\r\n            });\r\n        };\r\n        /**\r\n         *  Load slide content into slide.\r\n         *  This is used to load content into slides that is not visible too\r\n         *  @param {Number} index - index of the slide.\r\n         *  @param {Boolean} rec - if true call loadcontent() function again.\r\n         */\r\n        LightGallery.prototype.loadContent = function (index, rec) {\r\n            var _this = this;\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var $currentSlide = $LG(this.getSlideItemId(index));\r\n            var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n            var src = currentGalleryItem.src;\r\n            var video = currentGalleryItem.video;\r\n            var _html5Video = video && typeof video === 'string' ? JSON.parse(video) : video;\r\n            if (currentGalleryItem.responsive) {\r\n                var srcDyItms = currentGalleryItem.responsive.split(',');\r\n                src = utils.getResponsiveSrc(srcDyItms) || src;\r\n            }\r\n            var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n            var lgVideoStyle = '';\r\n            var iframe = !!currentGalleryItem.iframe;\r\n            if (!$currentSlide.hasClass('lg-loaded')) {\r\n                if (videoInfo) {\r\n                    var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;\r\n                    var videoSize = utils.getSize(this.items[index], this.$lgContent, top_2 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                    lgVideoStyle = this.getVideoContStyle(videoSize);\r\n                }\r\n                if (iframe) {\r\n                    var markup = utils.getIframeMarkup(src, this.settings.iframeWidth, this.settings.iframeHeight, currentGalleryItem.iframeTitle);\r\n                    $currentSlide.prepend(markup);\r\n                }\r\n                else if (poster) {\r\n                    var dummyImg = '';\r\n                    var isFirstSlide_1 = !this.lGalleryOn;\r\n                    var hasStartAnimation = !this.lGalleryOn &&\r\n                        this.zoomFromOrigin &&\r\n                        this.currentImageSize;\r\n                    if (hasStartAnimation) {\r\n                        dummyImg = this.getDummyImageContent($currentSlide, index, '');\r\n                    }\r\n                    var markup = utils.getVideoPosterMarkup(poster, dummyImg || '', lgVideoStyle, videoInfo);\r\n                    $currentSlide.prepend(markup);\r\n                    var delay_1 = (hasStartAnimation\r\n                        ? this.settings.startAnimationDuration\r\n                        : this.settings.backdropDuration) + 100;\r\n                    setTimeout(function () {\r\n                        _this.LGel.trigger(lGEvents.hasVideo, {\r\n                            index: index,\r\n                            src: src,\r\n                            html5Video: _html5Video,\r\n                            hasPoster: true,\r\n                            isFirstSlide: isFirstSlide_1,\r\n                        });\r\n                    }, delay_1);\r\n                }\r\n                else if (videoInfo) {\r\n                    var markup = \"<div class=\\\"lg-video-cont \\\" style=\\\"\" + lgVideoStyle + \"\\\"></div>\";\r\n                    $currentSlide.prepend(markup);\r\n                    this.LGel.trigger(lGEvents.hasVideo, {\r\n                        index: index,\r\n                        src: src,\r\n                        html5Video: _html5Video,\r\n                        hasPoster: false,\r\n                    });\r\n                }\r\n                else {\r\n                    this.setImgMarkup(src, $currentSlide, index);\r\n                    if (srcset || sources) {\r\n                        var $img = $currentSlide.find('.lg-object');\r\n                        this.initPictureFill($img);\r\n                    }\r\n                }\r\n                this.LGel.trigger(lGEvents.afterAppendSlide, { index: index });\r\n                if (this.lGalleryOn &&\r\n                    this.settings.appendSubHtmlTo !== '.lg-sub-html') {\r\n                    this.addHtml(index);\r\n                }\r\n            }\r\n            // For first time add some delay for displaying the start animation.\r\n            var _speed = 0;\r\n            // delay for adding complete class. it is 0 except first time.\r\n            var delay = 0;\r\n            if (!this.lGalleryOn) {\r\n                if (this.zoomFromOrigin && this.currentImageSize) {\r\n                    delay = this.settings.startAnimationDuration + 10;\r\n                }\r\n                else {\r\n                    delay = this.settings.backdropDuration + 10;\r\n                }\r\n            }\r\n            // Do not change the delay value because it is required for zoom plugin.\r\n            // If gallery opened from direct url (hash) speed value should be 0\r\n            if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\r\n                _speed = delay;\r\n            }\r\n            // Only for first slide\r\n            if (!this.lGalleryOn && this.zoomFromOrigin && this.currentImageSize) {\r\n                setTimeout(function () {\r\n                    $currentSlide\r\n                        .removeClass('lg-start-end-progress lg-start-progress')\r\n                        .removeAttr('style');\r\n                }, this.settings.startAnimationDuration + 100);\r\n                if (!$currentSlide.hasClass('lg-loaded')) {\r\n                    setTimeout(function () {\r\n                        $currentSlide\r\n                            .find('.lg-img-wrap')\r\n                            .append(utils.getImgMarkup(index, src, '', srcset, sizes, currentGalleryItem.sources));\r\n                        if (srcset || sources) {\r\n                            var $img = $currentSlide.find('.lg-object');\r\n                            _this.initPictureFill($img);\r\n                        }\r\n                        _this.onLgObjectLoad($currentSlide, index, delay, _speed, true);\r\n                        var mediaObject = $currentSlide\r\n                            .find('.lg-object')\r\n                            .first();\r\n                        if (utils.isImageLoaded(mediaObject.get())) {\r\n                            _this.loadContentOnLoad(index, $currentSlide, _speed);\r\n                        }\r\n                        else {\r\n                            mediaObject.on('load.lg error.lg', function () {\r\n                                _this.loadContentOnLoad(index, $currentSlide, _speed);\r\n                            });\r\n                        }\r\n                    }, this.settings.startAnimationDuration + 100);\r\n                }\r\n            }\r\n            // SLide content has been added to dom\r\n            $currentSlide.addClass('lg-loaded');\r\n            this.onLgObjectLoad($currentSlide, index, delay, _speed, false);\r\n            // @todo check load state for html5 videos\r\n            if (videoInfo && videoInfo.html5 && !poster) {\r\n                $currentSlide.addClass('lg-complete lg-complete_');\r\n            }\r\n            // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\r\n            if ((!this.zoomFromOrigin || !this.currentImageSize) &&\r\n                $currentSlide.hasClass('lg-complete_') &&\r\n                !this.lGalleryOn) {\r\n                setTimeout(function () {\r\n                    $currentSlide.addClass('lg-complete');\r\n                }, this.settings.backdropDuration);\r\n            }\r\n            // Content loaded\r\n            // Need to set lGalleryOn before calling preload function\r\n            this.lGalleryOn = true;\r\n            if (rec === true) {\r\n                if (!$currentSlide.hasClass('lg-complete_')) {\r\n                    $currentSlide\r\n                        .find('.lg-object')\r\n                        .first()\r\n                        .on('load.lg error.lg', function () {\r\n                        _this.preload(index);\r\n                    });\r\n                }\r\n                else {\r\n                    this.preload(index);\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.loadContentOnLoad = function (index, $currentSlide, speed) {\r\n            var _this = this;\r\n            setTimeout(function () {\r\n                $currentSlide.find('.lg-dummy-img').remove();\r\n                $currentSlide.removeClass('lg-first-slide');\r\n                _this.outer.removeClass('lg-first-slide-loading');\r\n                _this.isDummyImageRemoved = true;\r\n                _this.preload(index);\r\n            }, speed + 300);\r\n        };\r\n        LightGallery.prototype.getItemsToBeInsertedToDom = function (index, prevIndex, numberOfItems) {\r\n            var _this = this;\r\n            if (numberOfItems === void 0) { numberOfItems = 0; }\r\n            var itemsToBeInsertedToDom = [];\r\n            // Minimum 2 items should be there\r\n            var possibleNumberOfItems = Math.max(numberOfItems, 3);\r\n            possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);\r\n            var prevIndexItem = \"lg-item-\" + this.lgId + \"-\" + prevIndex;\r\n            if (this.galleryItems.length <= 3) {\r\n                this.galleryItems.forEach(function (_element, index) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + _this.lgId + \"-\" + index);\r\n                });\r\n                return itemsToBeInsertedToDom;\r\n            }\r\n            if (index < (this.galleryItems.length - 1) / 2) {\r\n                for (var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n                }\r\n                var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n                for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index + idx + 1));\r\n                }\r\n            }\r\n            else {\r\n                for (var idx = index; idx <= this.galleryItems.length - 1 &&\r\n                    idx < index + possibleNumberOfItems / 2; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n                }\r\n                var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n                for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index - idx - 1));\r\n                }\r\n            }\r\n            if (this.settings.loop) {\r\n                if (index === this.galleryItems.length - 1) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + 0);\r\n                }\r\n                else if (index === 0) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (this.galleryItems.length - 1));\r\n                }\r\n            }\r\n            if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + prevIndex);\r\n            }\r\n            return itemsToBeInsertedToDom;\r\n        };\r\n        LightGallery.prototype.organizeSlideItems = function (index, prevIndex) {\r\n            var _this = this;\r\n            var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);\r\n            itemsToBeInsertedToDom.forEach(function (item) {\r\n                if (_this.currentItemsInDom.indexOf(item) === -1) {\r\n                    _this.$inner.append(\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n                }\r\n            });\r\n            this.currentItemsInDom.forEach(function (item) {\r\n                if (itemsToBeInsertedToDom.indexOf(item) === -1) {\r\n                    $LG(\"#\" + item).remove();\r\n                }\r\n            });\r\n            return itemsToBeInsertedToDom;\r\n        };\r\n        /**\r\n         * Get previous index of the slide\r\n         */\r\n        LightGallery.prototype.getPreviousSlideIndex = function () {\r\n            var prevIndex = 0;\r\n            try {\r\n                var currentItemId = this.outer\r\n                    .find('.lg-current')\r\n                    .first()\r\n                    .attr('id');\r\n                prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\r\n            }\r\n            catch (error) {\r\n                prevIndex = 0;\r\n            }\r\n            return prevIndex;\r\n        };\r\n        LightGallery.prototype.setDownloadValue = function (index) {\r\n            if (this.settings.download) {\r\n                var currentGalleryItem = this.galleryItems[index];\r\n                var src = currentGalleryItem.downloadUrl !== false &&\r\n                    (currentGalleryItem.downloadUrl || currentGalleryItem.src);\r\n                if (src && !currentGalleryItem.iframe) {\r\n                    this.getElementById('lg-download').attr('href', src);\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.makeSlideAnimation = function (direction, currentSlideItem, previousSlideItem) {\r\n            var _this = this;\r\n            if (this.lGalleryOn) {\r\n                previousSlideItem.addClass('lg-slide-progress');\r\n            }\r\n            setTimeout(function () {\r\n                // remove all transitions\r\n                _this.outer.addClass('lg-no-trans');\r\n                _this.outer\r\n                    .find('.lg-item')\r\n                    .removeClass('lg-prev-slide lg-next-slide');\r\n                if (direction === 'prev') {\r\n                    //prevslide\r\n                    currentSlideItem.addClass('lg-prev-slide');\r\n                    previousSlideItem.addClass('lg-next-slide');\r\n                }\r\n                else {\r\n                    // next slide\r\n                    currentSlideItem.addClass('lg-next-slide');\r\n                    previousSlideItem.addClass('lg-prev-slide');\r\n                }\r\n                // give 50 ms for browser to add/remove class\r\n                setTimeout(function () {\r\n                    _this.outer.find('.lg-item').removeClass('lg-current');\r\n                    currentSlideItem.addClass('lg-current');\r\n                    // reset all transitions\r\n                    _this.outer.removeClass('lg-no-trans');\r\n                }, 50);\r\n            }, this.lGalleryOn ? this.settings.slideDelay : 0);\r\n        };\r\n        /**\r\n         * Goto a specific slide.\r\n         * @param {Number} index - index of the slide\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\r\n         * @param {Boolean} fromThumb - true if slide function called via thumbnail click\r\n         * @param {String} direction - Direction of the slide(next/prev)\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  // to go to 3rd slide\r\n         *  plugin.slide(2);\r\n         *\r\n         */\r\n        LightGallery.prototype.slide = function (index, fromTouch, fromThumb, direction) {\r\n            var _this = this;\r\n            var prevIndex = this.getPreviousSlideIndex();\r\n            this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\r\n            // Prevent multiple call, Required for hsh plugin\r\n            if (this.lGalleryOn && prevIndex === index) {\r\n                return;\r\n            }\r\n            var numberOfGalleryItems = this.galleryItems.length;\r\n            if (!this.lgBusy) {\r\n                if (this.settings.counter) {\r\n                    this.updateCurrentCounter(index);\r\n                }\r\n                var currentSlideItem = this.getSlideItem(index);\r\n                var previousSlideItem_1 = this.getSlideItem(prevIndex);\r\n                var currentGalleryItem = this.galleryItems[index];\r\n                var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n                this.outer.attr('data-lg-slide-type', this.getSlideType(currentGalleryItem));\r\n                this.setDownloadValue(index);\r\n                if (videoInfo) {\r\n                    var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;\r\n                    var videoSize = utils.getSize(this.items[index], this.$lgContent, top_3 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                    this.resizeVideoSlide(index, videoSize);\r\n                }\r\n                this.LGel.trigger(lGEvents.beforeSlide, {\r\n                    prevIndex: prevIndex,\r\n                    index: index,\r\n                    fromTouch: !!fromTouch,\r\n                    fromThumb: !!fromThumb,\r\n                });\r\n                this.lgBusy = true;\r\n                clearTimeout(this.hideBarTimeout);\r\n                this.arrowDisable(index);\r\n                if (!direction) {\r\n                    if (index < prevIndex) {\r\n                        direction = 'prev';\r\n                    }\r\n                    else if (index > prevIndex) {\r\n                        direction = 'next';\r\n                    }\r\n                }\r\n                if (!fromTouch) {\r\n                    this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);\r\n                }\r\n                else {\r\n                    this.outer\r\n                        .find('.lg-item')\r\n                        .removeClass('lg-prev-slide lg-current lg-next-slide');\r\n                    var touchPrev = void 0;\r\n                    var touchNext = void 0;\r\n                    if (numberOfGalleryItems > 2) {\r\n                        touchPrev = index - 1;\r\n                        touchNext = index + 1;\r\n                        if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\r\n                            // next slide\r\n                            touchNext = 0;\r\n                            touchPrev = numberOfGalleryItems - 1;\r\n                        }\r\n                        else if (index === numberOfGalleryItems - 1 &&\r\n                            prevIndex === 0) {\r\n                            // prev slide\r\n                            touchNext = 0;\r\n                            touchPrev = numberOfGalleryItems - 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        touchPrev = 0;\r\n                        touchNext = 1;\r\n                    }\r\n                    if (direction === 'prev') {\r\n                        this.getSlideItem(touchNext).addClass('lg-next-slide');\r\n                    }\r\n                    else {\r\n                        this.getSlideItem(touchPrev).addClass('lg-prev-slide');\r\n                    }\r\n                    currentSlideItem.addClass('lg-current');\r\n                }\r\n                // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\r\n                if (!this.lGalleryOn) {\r\n                    this.loadContent(index, true);\r\n                }\r\n                setTimeout(function () {\r\n                    if (_this.lGalleryOn) {\r\n                        _this.loadContent(index, true);\r\n                    }\r\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\r\n                    if (_this.settings.appendSubHtmlTo === '.lg-sub-html') {\r\n                        _this.addHtml(index);\r\n                    }\r\n                }, (this.lGalleryOn ? this.settings.speed + 50 : 50) + (fromTouch ? 0 : this.settings.slideDelay));\r\n                setTimeout(function () {\r\n                    _this.lgBusy = false;\r\n                    previousSlideItem_1.removeClass('lg-slide-progress');\r\n                    _this.LGel.trigger(lGEvents.afterSlide, {\r\n                        prevIndex: prevIndex,\r\n                        index: index,\r\n                        fromTouch: fromTouch,\r\n                        fromThumb: fromThumb,\r\n                    });\r\n                }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\r\n            }\r\n            this.index = index;\r\n        };\r\n        LightGallery.prototype.updateCurrentCounter = function (index) {\r\n            this.getElementById('lg-counter-current').html(index + 1 + '');\r\n        };\r\n        LightGallery.prototype.updateCounterTotal = function () {\r\n            this.getElementById('lg-counter-all').html(this.galleryItems.length + '');\r\n        };\r\n        LightGallery.prototype.getSlideType = function (item) {\r\n            if (item.__slideVideoInfo) {\r\n                return 'video';\r\n            }\r\n            else if (item.iframe) {\r\n                return 'iframe';\r\n            }\r\n            else {\r\n                return 'image';\r\n            }\r\n        };\r\n        LightGallery.prototype.touchMove = function (startCoords, endCoords) {\r\n            var distanceX = endCoords.pageX - startCoords.pageX;\r\n            var distanceY = endCoords.pageY - startCoords.pageY;\r\n            var allowSwipe = false;\r\n            if (this.swipeDirection) {\r\n                allowSwipe = true;\r\n            }\r\n            else {\r\n                if (Math.abs(distanceX) > 15) {\r\n                    this.swipeDirection = 'horizontal';\r\n                    allowSwipe = true;\r\n                }\r\n                else if (Math.abs(distanceY) > 15) {\r\n                    this.swipeDirection = 'vertical';\r\n                    allowSwipe = true;\r\n                }\r\n            }\r\n            if (!allowSwipe) {\r\n                return;\r\n            }\r\n            var $currentSlide = this.getSlideItem(this.index);\r\n            if (this.swipeDirection === 'horizontal') {\r\n                // reset opacity and transition duration\r\n                this.outer.addClass('lg-dragging');\r\n                // move current slide\r\n                this.setTranslate($currentSlide, distanceX, 0);\r\n                // move next and prev slide with current slide\r\n                var width = $currentSlide.get().offsetWidth;\r\n                var slideWidthAmount = (width * 15) / 100;\r\n                var gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\r\n                this.setTranslate(this.outer.find('.lg-prev-slide').first(), -width + distanceX - gutter, 0);\r\n                this.setTranslate(this.outer.find('.lg-next-slide').first(), width + distanceX + gutter, 0);\r\n            }\r\n            else if (this.swipeDirection === 'vertical') {\r\n                if (this.settings.swipeToClose) {\r\n                    this.$container.addClass('lg-dragging-vertical');\r\n                    var opacity = 1 - Math.abs(distanceY) / window.innerHeight;\r\n                    this.$backdrop.css('opacity', opacity);\r\n                    var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\r\n                    this.setTranslate($currentSlide, 0, distanceY, scale, scale);\r\n                    if (Math.abs(distanceY) > 100) {\r\n                        this.outer\r\n                            .addClass('lg-hide-items')\r\n                            .removeClass('lg-components-open');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.touchEnd = function (endCoords, startCoords, event) {\r\n            var _this = this;\r\n            var distance;\r\n            // keep slide animation for any mode while dragg/swipe\r\n            if (this.settings.mode !== 'lg-slide') {\r\n                this.outer.addClass('lg-slide');\r\n            }\r\n            // set transition duration\r\n            setTimeout(function () {\r\n                _this.$container.removeClass('lg-dragging-vertical');\r\n                _this.outer\r\n                    .removeClass('lg-dragging lg-hide-items')\r\n                    .addClass('lg-components-open');\r\n                var triggerClick = true;\r\n                if (_this.swipeDirection === 'horizontal') {\r\n                    distance = endCoords.pageX - startCoords.pageX;\r\n                    var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);\r\n                    if (distance < 0 &&\r\n                        distanceAbs > _this.settings.swipeThreshold) {\r\n                        _this.goToNextSlide(true);\r\n                        triggerClick = false;\r\n                    }\r\n                    else if (distance > 0 &&\r\n                        distanceAbs > _this.settings.swipeThreshold) {\r\n                        _this.goToPrevSlide(true);\r\n                        triggerClick = false;\r\n                    }\r\n                }\r\n                else if (_this.swipeDirection === 'vertical') {\r\n                    distance = Math.abs(endCoords.pageY - startCoords.pageY);\r\n                    if (_this.settings.closable &&\r\n                        _this.settings.swipeToClose &&\r\n                        distance > 100) {\r\n                        _this.closeGallery();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        _this.$backdrop.css('opacity', 1);\r\n                    }\r\n                }\r\n                _this.outer.find('.lg-item').removeAttr('style');\r\n                if (triggerClick &&\r\n                    Math.abs(endCoords.pageX - startCoords.pageX) < 5) {\r\n                    // Trigger click if distance is less than 5 pix\r\n                    var target = $LG(event.target);\r\n                    if (_this.isPosterElement(target)) {\r\n                        _this.LGel.trigger(lGEvents.posterClick);\r\n                    }\r\n                }\r\n                _this.swipeDirection = undefined;\r\n            });\r\n            // remove slide class once drag/swipe is completed if mode is not slide\r\n            setTimeout(function () {\r\n                if (!_this.outer.hasClass('lg-dragging') &&\r\n                    _this.settings.mode !== 'lg-slide') {\r\n                    _this.outer.removeClass('lg-slide');\r\n                }\r\n            }, this.settings.speed + 100);\r\n        };\r\n        LightGallery.prototype.enableSwipe = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isMoved = false;\r\n            var isSwiping = false;\r\n            if (this.settings.enableSwipe) {\r\n                this.$inner.on('touchstart.lg', function (e) {\r\n                    e.preventDefault();\r\n                    var $item = _this.getSlideItem(_this.index);\r\n                    if (($LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target)) &&\r\n                        !_this.outer.hasClass('lg-zoomed') &&\r\n                        !_this.lgBusy &&\r\n                        e.targetTouches.length === 1) {\r\n                        isSwiping = true;\r\n                        _this.touchAction = 'swipe';\r\n                        _this.manageSwipeClass();\r\n                        startCoords = {\r\n                            pageX: e.targetTouches[0].pageX,\r\n                            pageY: e.targetTouches[0].pageY,\r\n                        };\r\n                    }\r\n                });\r\n                this.$inner.on('touchmove.lg', function (e) {\r\n                    e.preventDefault();\r\n                    if (isSwiping &&\r\n                        _this.touchAction === 'swipe' &&\r\n                        e.targetTouches.length === 1) {\r\n                        endCoords = {\r\n                            pageX: e.targetTouches[0].pageX,\r\n                            pageY: e.targetTouches[0].pageY,\r\n                        };\r\n                        _this.touchMove(startCoords, endCoords);\r\n                        isMoved = true;\r\n                    }\r\n                });\r\n                this.$inner.on('touchend.lg', function (event) {\r\n                    if (_this.touchAction === 'swipe') {\r\n                        if (isMoved) {\r\n                            isMoved = false;\r\n                            _this.touchEnd(endCoords, startCoords, event);\r\n                        }\r\n                        else if (isSwiping) {\r\n                            var target = $LG(event.target);\r\n                            if (_this.isPosterElement(target)) {\r\n                                _this.LGel.trigger(lGEvents.posterClick);\r\n                            }\r\n                        }\r\n                        _this.touchAction = undefined;\r\n                        isSwiping = false;\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        LightGallery.prototype.enableDrag = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isDraging = false;\r\n            var isMoved = false;\r\n            if (this.settings.enableDrag) {\r\n                this.outer.on('mousedown.lg', function (e) {\r\n                    var $item = _this.getSlideItem(_this.index);\r\n                    if ($LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target)) {\r\n                        if (!_this.outer.hasClass('lg-zoomed') && !_this.lgBusy) {\r\n                            e.preventDefault();\r\n                            if (!_this.lgBusy) {\r\n                                _this.manageSwipeClass();\r\n                                startCoords = {\r\n                                    pageX: e.pageX,\r\n                                    pageY: e.pageY,\r\n                                };\r\n                                isDraging = true;\r\n                                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                                _this.outer.get().scrollLeft += 1;\r\n                                _this.outer.get().scrollLeft -= 1;\r\n                                // *\r\n                                _this.outer\r\n                                    .removeClass('lg-grab')\r\n                                    .addClass('lg-grabbing');\r\n                                _this.LGel.trigger(lGEvents.dragStart);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $LG(window).on(\"mousemove.lg.global\" + this.lgId, function (e) {\r\n                    if (isDraging && _this.lgOpened) {\r\n                        isMoved = true;\r\n                        endCoords = {\r\n                            pageX: e.pageX,\r\n                            pageY: e.pageY,\r\n                        };\r\n                        _this.touchMove(startCoords, endCoords);\r\n                        _this.LGel.trigger(lGEvents.dragMove);\r\n                    }\r\n                });\r\n                $LG(window).on(\"mouseup.lg.global\" + this.lgId, function (event) {\r\n                    if (!_this.lgOpened) {\r\n                        return;\r\n                    }\r\n                    var target = $LG(event.target);\r\n                    if (isMoved) {\r\n                        isMoved = false;\r\n                        _this.touchEnd(endCoords, startCoords, event);\r\n                        _this.LGel.trigger(lGEvents.dragEnd);\r\n                    }\r\n                    else if (_this.isPosterElement(target)) {\r\n                        _this.LGel.trigger(lGEvents.posterClick);\r\n                    }\r\n                    // Prevent execution on click\r\n                    if (isDraging) {\r\n                        isDraging = false;\r\n                        _this.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        LightGallery.prototype.manageSwipeClass = function () {\r\n            var _touchNext = this.index + 1;\r\n            var _touchPrev = this.index - 1;\r\n            if (this.settings.loop && this.galleryItems.length > 2) {\r\n                if (this.index === 0) {\r\n                    _touchPrev = this.galleryItems.length - 1;\r\n                }\r\n                else if (this.index === this.galleryItems.length - 1) {\r\n                    _touchNext = 0;\r\n                }\r\n            }\r\n            this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\r\n            if (_touchPrev > -1) {\r\n                this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\r\n            }\r\n            this.getSlideItem(_touchNext).addClass('lg-next-slide');\r\n        };\r\n        /**\r\n         * Go to next slide\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.goToNextSlide();\r\n         * @see <a href=\"/demos/methods/\">Demo</a>\r\n         */\r\n        LightGallery.prototype.goToNextSlide = function (fromTouch) {\r\n            var _this = this;\r\n            var _loop = this.settings.loop;\r\n            if (fromTouch && this.galleryItems.length < 3) {\r\n                _loop = false;\r\n            }\r\n            if (!this.lgBusy) {\r\n                if (this.index + 1 < this.galleryItems.length) {\r\n                    this.index++;\r\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                        index: this.index,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'next');\r\n                }\r\n                else {\r\n                    if (_loop) {\r\n                        this.index = 0;\r\n                        this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                            index: this.index,\r\n                        });\r\n                        this.slide(this.index, !!fromTouch, false, 'next');\r\n                    }\r\n                    else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                        this.outer.addClass('lg-right-end');\r\n                        setTimeout(function () {\r\n                            _this.outer.removeClass('lg-right-end');\r\n                        }, 400);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Go to previous slides\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery({});\r\n         *  plugin.goToPrevSlide();\r\n         * @see <a href=\"/demos/methods/\">Demo</a>\r\n         *\r\n         */\r\n        LightGallery.prototype.goToPrevSlide = function (fromTouch) {\r\n            var _this = this;\r\n            var _loop = this.settings.loop;\r\n            if (fromTouch && this.galleryItems.length < 3) {\r\n                _loop = false;\r\n            }\r\n            if (!this.lgBusy) {\r\n                if (this.index > 0) {\r\n                    this.index--;\r\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                        index: this.index,\r\n                        fromTouch: fromTouch,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'prev');\r\n                }\r\n                else {\r\n                    if (_loop) {\r\n                        this.index = this.galleryItems.length - 1;\r\n                        this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                            index: this.index,\r\n                            fromTouch: fromTouch,\r\n                        });\r\n                        this.slide(this.index, !!fromTouch, false, 'prev');\r\n                    }\r\n                    else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                        this.outer.addClass('lg-left-end');\r\n                        setTimeout(function () {\r\n                            _this.outer.removeClass('lg-left-end');\r\n                        }, 400);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.keyPress = function () {\r\n            var _this = this;\r\n            $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n                if (_this.lgOpened &&\r\n                    _this.settings.escKey === true &&\r\n                    e.keyCode === 27) {\r\n                    e.preventDefault();\r\n                    if (_this.settings.allowMediaOverlap &&\r\n                        _this.outer.hasClass('lg-can-toggle') &&\r\n                        _this.outer.hasClass('lg-components-open')) {\r\n                        _this.outer.removeClass('lg-components-open');\r\n                    }\r\n                    else {\r\n                        _this.closeGallery();\r\n                    }\r\n                }\r\n                if (_this.lgOpened && _this.galleryItems.length > 1) {\r\n                    if (e.keyCode === 37) {\r\n                        e.preventDefault();\r\n                        _this.goToPrevSlide();\r\n                    }\r\n                    if (e.keyCode === 39) {\r\n                        e.preventDefault();\r\n                        _this.goToNextSlide();\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.arrow = function () {\r\n            var _this = this;\r\n            this.getElementById('lg-prev').on('click.lg', function () {\r\n                _this.goToPrevSlide();\r\n            });\r\n            this.getElementById('lg-next').on('click.lg', function () {\r\n                _this.goToNextSlide();\r\n            });\r\n        };\r\n        LightGallery.prototype.arrowDisable = function (index) {\r\n            // Disable arrows if settings.hideControlOnEnd is true\r\n            if (!this.settings.loop && this.settings.hideControlOnEnd) {\r\n                var $prev = this.getElementById('lg-prev');\r\n                var $next = this.getElementById('lg-next');\r\n                if (index + 1 < this.galleryItems.length) {\r\n                    $prev.removeAttr('disabled').removeClass('disabled');\r\n                }\r\n                else {\r\n                    $prev.attr('disabled', 'disabled').addClass('disabled');\r\n                }\r\n                if (index > 0) {\r\n                    $next.removeAttr('disabled').removeClass('disabled');\r\n                }\r\n                else {\r\n                    $next.attr('disabled', 'disabled').addClass('disabled');\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.setTranslate = function ($el, xValue, yValue, scaleX, scaleY) {\r\n            if (scaleX === void 0) { scaleX = 1; }\r\n            if (scaleY === void 0) { scaleY = 1; }\r\n            $el.css('transform', 'translate3d(' +\r\n                xValue +\r\n                'px, ' +\r\n                yValue +\r\n                'px, 0px) scale3d(' +\r\n                scaleX +\r\n                ', ' +\r\n                scaleY +\r\n                ', 1)');\r\n        };\r\n        LightGallery.prototype.mousewheel = function () {\r\n            var _this = this;\r\n            this.outer.on('mousewheel.lg', function (e) {\r\n                if (!e.deltaY || _this.galleryItems.length < 2) {\r\n                    return;\r\n                }\r\n                if (e.deltaY > 0) {\r\n                    _this.goToPrevSlide();\r\n                }\r\n                else {\r\n                    _this.goToNextSlide();\r\n                }\r\n                e.preventDefault();\r\n            });\r\n        };\r\n        LightGallery.prototype.isSlideElement = function (target) {\r\n            return (target.hasClass('lg-outer') ||\r\n                target.hasClass('lg-item') ||\r\n                target.hasClass('lg-img-wrap'));\r\n        };\r\n        LightGallery.prototype.isPosterElement = function (target) {\r\n            var playButton = this.getSlideItem(this.index)\r\n                .find('.lg-video-play-button')\r\n                .get();\r\n            return (target.hasClass('lg-video-poster') ||\r\n                target.hasClass('lg-video-play-button') ||\r\n                (playButton && playButton.contains(target.get())));\r\n        };\r\n        /**\r\n         * Maximize minimize inline gallery.\r\n         * @category lGPublicMethods\r\n         */\r\n        LightGallery.prototype.toggleMaximize = function () {\r\n            var _this = this;\r\n            this.getElementById('lg-maximize').on('click.lg', function () {\r\n                _this.$container.toggleClass('lg-inline');\r\n                _this.refreshOnResize();\r\n            });\r\n        };\r\n        LightGallery.prototype.invalidateItems = function () {\r\n            for (var index = 0; index < this.items.length; index++) {\r\n                var element = this.items[index];\r\n                var $element = $LG(element);\r\n                $element.off(\"click.lgcustom-item-\" + $element.attr('data-lg-id'));\r\n            }\r\n        };\r\n        LightGallery.prototype.manageCloseGallery = function () {\r\n            var _this = this;\r\n            if (!this.settings.closable)\r\n                return;\r\n            var mousedown = false;\r\n            this.getElementById('lg-close').on('click.lg', function () {\r\n                _this.closeGallery();\r\n            });\r\n            if (this.settings.closeOnTap) {\r\n                // If you drag the slide and release outside gallery gets close on chrome\r\n                // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\r\n                this.outer.on('mousedown.lg', function (e) {\r\n                    var target = $LG(e.target);\r\n                    if (_this.isSlideElement(target)) {\r\n                        mousedown = true;\r\n                    }\r\n                    else {\r\n                        mousedown = false;\r\n                    }\r\n                });\r\n                this.outer.on('mousemove.lg', function () {\r\n                    mousedown = false;\r\n                });\r\n                this.outer.on('mouseup.lg', function (e) {\r\n                    var target = $LG(e.target);\r\n                    if (_this.isSlideElement(target) && mousedown) {\r\n                        if (!_this.outer.hasClass('lg-dragging')) {\r\n                            _this.closeGallery();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * Close lightGallery if it is opened.\r\n         *\r\n         * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\r\n         * @return returns the estimated time to close gallery completely including the close animation duration\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.closeGallery();\r\n         *\r\n         */\r\n        LightGallery.prototype.closeGallery = function (force) {\r\n            var _this = this;\r\n            if (!this.lgOpened || (!this.settings.closable && !force)) {\r\n                return 0;\r\n            }\r\n            this.LGel.trigger(lGEvents.beforeClose);\r\n            $LG(window).scrollTop(this.prevScrollTop);\r\n            var currentItem = this.items[this.index];\r\n            var transform;\r\n            if (this.zoomFromOrigin && currentItem) {\r\n                var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;\r\n                var imageSize = utils.getSize(currentItem, this.$lgContent, top_4 + bottom, this.galleryItems[this.index].__slideVideoInfo &&\r\n                    this.settings.videoMaxSize);\r\n                transform = utils.getTransform(currentItem, this.$lgContent, top_4, bottom, imageSize);\r\n            }\r\n            if (this.zoomFromOrigin && transform) {\r\n                this.outer.addClass('lg-closing lg-zoom-from-image');\r\n                this.getSlideItem(this.index)\r\n                    .addClass('lg-start-end-progress')\r\n                    .css('transition-duration', this.settings.startAnimationDuration + 'ms')\r\n                    .css('transform', transform);\r\n            }\r\n            else {\r\n                this.outer.addClass('lg-hide-items');\r\n                // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\r\n                // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\r\n                this.outer.removeClass('lg-zoom-from-image');\r\n            }\r\n            // Unbind all events added by lightGallery\r\n            // @todo\r\n            //this.$el.off('.lg.tm');\r\n            this.destroyModules();\r\n            this.lGalleryOn = false;\r\n            this.isDummyImageRemoved = false;\r\n            this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n            clearTimeout(this.hideBarTimeout);\r\n            this.hideBarTimeout = false;\r\n            $LG('html').removeClass('lg-on');\r\n            this.outer.removeClass('lg-visible lg-components-open');\r\n            // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\r\n            this.$backdrop.removeClass('in').css('opacity', 0);\r\n            var removeTimeout = this.zoomFromOrigin && transform\r\n                ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration)\r\n                : this.settings.backdropDuration;\r\n            this.$container.removeClass('lg-show-in');\r\n            // Once the closign animation is completed and gallery is invisible\r\n            setTimeout(function () {\r\n                if (_this.zoomFromOrigin && transform) {\r\n                    _this.outer.removeClass('lg-zoom-from-image');\r\n                }\r\n                _this.$container.removeClass('lg-show');\r\n                // Need to remove inline opacity as it is used in the stylesheet as well\r\n                _this.$backdrop\r\n                    .removeAttr('style')\r\n                    .css('transition-duration', _this.settings.backdropDuration + 'ms');\r\n                _this.outer.removeClass(\"lg-closing \" + _this.settings.startClass);\r\n                _this.getSlideItem(_this.index).removeClass('lg-start-end-progress');\r\n                _this.$inner.empty();\r\n                if (_this.lgOpened) {\r\n                    _this.LGel.trigger(lGEvents.afterClose, {\r\n                        instance: _this,\r\n                    });\r\n                }\r\n                if (_this.outer.get()) {\r\n                    _this.outer.get().blur();\r\n                }\r\n                _this.lgOpened = false;\r\n            }, removeTimeout + 100);\r\n            return removeTimeout + 100;\r\n        };\r\n        LightGallery.prototype.initModules = function () {\r\n            this.plugins.forEach(function (module) {\r\n                try {\r\n                    module.init();\r\n                }\r\n                catch (err) {\r\n                    console.warn(\"lightGallery:- make sure lightGallery module is properly initiated\");\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.destroyModules = function (destroy) {\r\n            this.plugins.forEach(function (module) {\r\n                try {\r\n                    if (destroy) {\r\n                        module.destroy();\r\n                    }\r\n                    else {\r\n                        module.closeGallery && module.closeGallery();\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.warn(\"lightGallery:- make sure lightGallery module is properly destroyed\");\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Refresh lightGallery with new set of children.\r\n         *\r\n         * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\r\n         *\r\n         * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\r\n         * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  // Delete or add children, then call\r\n         *  plugin.refresh();\r\n         *\r\n         */\r\n        LightGallery.prototype.refresh = function (galleryItems) {\r\n            if (!this.settings.dynamic) {\r\n                this.invalidateItems();\r\n            }\r\n            if (galleryItems) {\r\n                this.galleryItems = galleryItems;\r\n            }\r\n            else {\r\n                this.galleryItems = this.getItems();\r\n            }\r\n            this.openGalleryOnItemClick();\r\n            this.updateCounterTotal();\r\n            this.manageSingleSlideClassName();\r\n            this.LGel.trigger(lGEvents.updateSlides);\r\n        };\r\n        /**\r\n         * Destroy lightGallery.\r\n         * Destroy lightGallery and its plugin instances completely\r\n         *\r\n         * @description This method also calls CloseGallery function internally\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.destroy();\r\n         *\r\n         */\r\n        LightGallery.prototype.destroy = function () {\r\n            var _this = this;\r\n            var closeTimeout = this.closeGallery(true);\r\n            setTimeout(function () {\r\n                _this.destroyModules(true);\r\n                if (!_this.settings.dynamic) {\r\n                    _this.invalidateItems();\r\n                }\r\n                $LG(window).off(\".lg.global\" + _this.lgId);\r\n                _this.LGel.off('.lg');\r\n                _this.$container.remove();\r\n            }, closeTimeout);\r\n        };\r\n        return LightGallery;\r\n    }());\n\n    function lightGallery(el, options) {\r\n        return new LightGallery(el, options);\r\n    }\n\n    return lightGallery;\n\n})));\n//# sourceMappingURL=lightgallery.umd.js.map\n","/*!\r\n * lightgallery | 2.2.0-beta.0 | June 15th 2021\r\n * http://www.lightgalleryjs.com/\r\n * Copyright (c) 2020 Sachin Neravath;\r\n * @license GPLv3\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global.lgVideo = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    var videoSettings = {\r\n        autoplayFirstVideo: true,\r\n        youTubePlayerParams: false,\r\n        vimeoPlayerParams: false,\r\n        wistiaPlayerParams: false,\r\n        gotoNextSlideOnVideoEnd: true,\r\n        autoplayVideoOnSlide: false,\r\n        videojs: false,\r\n        videojsOptions: {},\r\n    };\r\n\r\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n    };\r\n\r\n    /**\r\n     * Video module for lightGallery\r\n     * Supports HTML5, YouTube, Vimeo, wistia videos\r\n     *\r\n     *\r\n     * @ref Wistia\r\n     * https://wistia.com/support/integrations/wordpress(How to get url)\r\n     * https://wistia.com/support/developers/embed-options#using-embed-options\r\n     * https://wistia.com/support/developers/player-api\r\n     * https://wistia.com/support/developers/construct-an-embed-code\r\n     * http://jsfiddle.net/xvnm7xLm/\r\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\r\n     * https://wistia.com/support/embed-and-share/sharing-videos\r\n     * https://private-sharing.wistia.com/medias/mwhrulrucj\r\n     *\r\n     * @ref Youtube\r\n     * https://developers.google.com/youtube/player_parameters#enablejsapi\r\n     * https://developers.google.com/youtube/iframe_api_reference\r\n     *\r\n     */\r\n    function param(obj) {\r\n        return Object.keys(obj)\r\n            .map(function (k) {\r\n            return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]);\r\n        })\r\n            .join('&');\r\n    }\r\n    var Video = /** @class */ (function () {\r\n        function Video(instance) {\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.settings = __assign(__assign({}, videoSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        Video.prototype.init = function () {\r\n            var _this = this;\r\n            /**\r\n             * Event triggered when video url found without poster\r\n             * Append video HTML\r\n             * Play if autoplayFirstVideo is true\r\n             */\r\n            this.core.LGel.on(lGEvents.hasVideo + \".video\", this.onHasVideo.bind(this));\r\n            if (this.core.settings.enableSwipe || this.core.settings.enableDrag) {\r\n                this.core.LGel.on(lGEvents.posterClick + \".video\", function () {\r\n                    var $el = _this.core.getSlideItem(_this.core.index);\r\n                    _this.loadVideoOnPosterClick($el);\r\n                });\r\n            }\r\n            else {\r\n                // For IE 9 and bellow\r\n                this.core.outer\r\n                    .find('.lg-item')\r\n                    .first()\r\n                    .on('click.lg', function () {\r\n                    var $el = _this.core.getSlideItem(_this.core.index);\r\n                    _this.loadVideoOnPosterClick($el);\r\n                });\r\n            }\r\n            // @desc fired immediately before each slide transition.\r\n            this.core.LGel.on(lGEvents.beforeSlide + \".video\", this.onBeforeSlide.bind(this));\r\n            // @desc fired immediately after each slide transition.\r\n            this.core.LGel.on(lGEvents.afterSlide + \".video\", this.onAfterSlide.bind(this));\r\n        };\r\n        /**\r\n         * @desc Event triggered when video url or poster found\r\n         * Append video HTML is poster is not given\r\n         * Play if autoplayFirstVideo is true\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         */\r\n        Video.prototype.onHasVideo = function (event) {\r\n            var _a = event.detail, index = _a.index, src = _a.src, html5Video = _a.html5Video, hasPoster = _a.hasPoster, isFirstSlide = _a.isFirstSlide;\r\n            if (!hasPoster) {\r\n                // All functions are called separately if poster exist in loadVideoOnPosterClick function\r\n                this.appendVideos(this.core.getSlideItem(index), {\r\n                    src: src,\r\n                    addClass: 'lg-object',\r\n                    index: index,\r\n                    html5Video: html5Video,\r\n                });\r\n                // Automatically navigate to next slide once video reaches the end.\r\n                this.gotoNextSlideOnVideoEnd(src, index);\r\n            }\r\n            if (this.settings.autoplayFirstVideo && isFirstSlide) {\r\n                if (hasPoster) {\r\n                    var $slide = this.core.getSlideItem(index);\r\n                    this.loadVideoOnPosterClick($slide);\r\n                }\r\n                else {\r\n                    this.playVideo(index);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @desc fired immediately before each slide transition.\r\n         * Pause the previous video\r\n         * Hide the download button if the slide contains YouTube, Vimeo, or Wistia videos.\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         * @param {number} prevIndex - Previous index of the slide.\r\n         * @param {number} index - Current index of the slide\r\n         */\r\n        Video.prototype.onBeforeSlide = function (event) {\r\n            var _a = event.detail, prevIndex = _a.prevIndex, index = _a.index;\r\n            this.pauseVideo(prevIndex);\r\n            var _videoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            if (_videoInfo.youtube || _videoInfo.vimeo || _videoInfo.wistia) {\r\n                this.core.outer.addClass('lg-hide-download');\r\n            }\r\n        };\r\n        /**\r\n         * @desc fired immediately after each slide transition.\r\n         * Play video if autoplayVideoOnSlide option is enabled.\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         * @param {number} prevIndex - Previous index of the slide.\r\n         * @param {number} index - Current index of the slide\r\n         */\r\n        Video.prototype.onAfterSlide = function (event) {\r\n            var _this = this;\r\n            var index = event.detail.index;\r\n            if (this.settings.autoplayVideoOnSlide && this.core.lGalleryOn) {\r\n                setTimeout(function () {\r\n                    var $slide = _this.core.getSlideItem(index);\r\n                    if (!$slide.hasClass('lg-video-loaded')) {\r\n                        _this.loadVideoOnPosterClick($slide);\r\n                    }\r\n                    else {\r\n                        _this.playVideo(index);\r\n                    }\r\n                }, 100);\r\n            }\r\n        };\r\n        /**\r\n         * Play HTML5, Youtube, Vimeo or Wistia videos in a particular slide.\r\n         * @param {number} index - Index of the slide\r\n         */\r\n        Video.prototype.playVideo = function (index) {\r\n            this.controlVideo(index, 'play');\r\n        };\r\n        /**\r\n         * Pause HTML5, Youtube, Vimeo or Wistia videos in a particular slide.\r\n         * @param {number} index - Index of the slide\r\n         */\r\n        Video.prototype.pauseVideo = function (index) {\r\n            this.controlVideo(index, 'pause');\r\n        };\r\n        Video.prototype.getVideoHtml = function (src, addClass, index, html5Video) {\r\n            var video = '';\r\n            var videoInfo = this.core.galleryItems[index]\r\n                .__slideVideoInfo || {};\r\n            var currentGalleryItem = this.core.galleryItems[index];\r\n            var videoTitle = currentGalleryItem.title || currentGalleryItem.alt;\r\n            videoTitle = videoTitle ? 'title=\"' + videoTitle + '\"' : '';\r\n            var commonIframeProps = \"allowtransparency=\\\"true\\\" \\n            frameborder=\\\"0\\\" \\n            scrolling=\\\"no\\\" \\n            allowfullscreen \\n            mozallowfullscreen \\n            webkitallowfullscreen \\n            oallowfullscreen \\n            msallowfullscreen\";\r\n            if (videoInfo.youtube) {\r\n                var videoId = 'lg-youtube' + index;\r\n                var youTubePlayerParams = \"?wmode=opaque&autoplay=0&enablejsapi=1\";\r\n                var playerParams = youTubePlayerParams +\r\n                    (this.settings.youTubePlayerParams\r\n                        ? '&' + param(this.settings.youTubePlayerParams)\r\n                        : '');\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\" + videoId + \" class=\\\"lg-video-object lg-youtube \" + addClass + \"\\\" \" + videoTitle + \" src=\\\"//www.youtube.com/embed/\" + (videoInfo.youtube[1] + playerParams) + \"\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.vimeo) {\r\n                var videoId = 'lg-vimeo' + index;\r\n                var playerParams = param(this.settings.vimeoPlayerParams);\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\" + videoId + \" class=\\\"lg-video-object lg-vimeo \" + addClass + \"\\\" \" + videoTitle + \" src=\\\"//player.vimeo.com/video/\" + (videoInfo.vimeo[1] + playerParams) + \"\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.wistia) {\r\n                var wistiaId = 'lg-wistia' + index;\r\n                var playerParams = param(this.settings.wistiaPlayerParams);\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\\\"\" + wistiaId + \"\\\" src=\\\"//fast.wistia.net/embed/iframe/\" + (videoInfo.wistia[4] + playerParams) + \"\\\" \" + videoTitle + \" class=\\\"wistia_embed lg-video-object lg-wistia \" + addClass + \"\\\" name=\\\"wistia_embed\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.html5) {\r\n                var html5VideoMarkup = '';\r\n                for (var i = 0; i < html5Video.source.length; i++) {\r\n                    html5VideoMarkup += \"<source src=\\\"\" + html5Video.source[i].src + \"\\\" type=\\\"\" + html5Video.source[i].type + \"\\\">\";\r\n                }\r\n                var html5VideoAttrs_1 = '';\r\n                var videoAttributes_1 = html5Video.attributes || {};\r\n                Object.keys(videoAttributes_1 || {}).forEach(function (key) {\r\n                    html5VideoAttrs_1 += key + \"=\\\"\" + videoAttributes_1[key] + \"\\\" \";\r\n                });\r\n                video = \"<video class=\\\"lg-video-object lg-html5 \" + (this.settings.videojs ? 'video-js' : '') + \"\\\" \" + html5VideoAttrs_1 + \">\\n                \" + html5VideoMarkup + \"\\n                Your browser does not support HTML5 video.\\n            </video>\";\r\n            }\r\n            return video;\r\n        };\r\n        /**\r\n         * @desc - Append videos to the slide\r\n         *\r\n         * @param {HTMLElement} el - slide element\r\n         * @param {Object} videoParams - Video parameters, Contains src, class, index, htmlVideo\r\n         */\r\n        Video.prototype.appendVideos = function (el, videoParams) {\r\n            var _a;\r\n            var videoHtml = this.getVideoHtml(videoParams.src, videoParams.addClass, videoParams.index, videoParams.html5Video);\r\n            el.find('.lg-video-cont').append(videoHtml);\r\n            var $videoElement = el.find('.lg-video-object').first();\r\n            if (this.settings.videojs && ((_a = this.core.galleryItems[videoParams.index].__slideVideoInfo) === null || _a === void 0 ? void 0 : _a.html5)) {\r\n                try {\r\n                    return videojs($videoElement.get(), this.settings.videojsOptions);\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included videojs');\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.gotoNextSlideOnVideoEnd = function (src, index) {\r\n            var _this = this;\r\n            var $videoElement = this.core\r\n                .getSlideItem(index)\r\n                .find('.lg-video-object')\r\n                .first();\r\n            var videoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            if (this.settings.gotoNextSlideOnVideoEnd) {\r\n                if (videoInfo.html5) {\r\n                    $videoElement.on('ended', function () {\r\n                        _this.core.goToNextSlide();\r\n                    });\r\n                }\r\n                else if (videoInfo.vimeo) {\r\n                    try {\r\n                        // https://github.com/vimeo/player.js/#ended\r\n                        new Vimeo.Player($videoElement.get()).on('ended', function () {\r\n                            _this.core.goToNextSlide();\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included //github.com/vimeo/player.js');\r\n                    }\r\n                }\r\n                else if (videoInfo.wistia) {\r\n                    try {\r\n                        window._wq = window._wq || [];\r\n                        // @todo Event is gettign triggered multiple times\r\n                        window._wq.push({\r\n                            id: $videoElement.attr('id'),\r\n                            onReady: function (video) {\r\n                                video.bind('end', function () {\r\n                                    _this.core.goToNextSlide();\r\n                                });\r\n                            },\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.controlVideo = function (index, action) {\r\n            var $videoElement = this.core\r\n                .getSlideItem(index)\r\n                .find('.lg-video-object')\r\n                .first();\r\n            var videoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            if (!$videoElement.get())\r\n                return;\r\n            if (videoInfo.youtube) {\r\n                try {\r\n                    $videoElement.get().contentWindow.postMessage(\"{\\\"event\\\":\\\"command\\\",\\\"func\\\":\\\"\" + action + \"Video\\\",\\\"args\\\":\\\"\\\"}\", '*');\r\n                }\r\n                catch (e) {\r\n                    console.error(\"lightGallery:- \" + e);\r\n                }\r\n            }\r\n            else if (videoInfo.vimeo) {\r\n                try {\r\n                    new Vimeo.Player($videoElement.get())[action]();\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included //github.com/vimeo/player.js');\r\n                }\r\n            }\r\n            else if (videoInfo.html5) {\r\n                if (this.settings.videojs) {\r\n                    try {\r\n                        videojs($videoElement.get())[action]();\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included videojs');\r\n                    }\r\n                }\r\n                else {\r\n                    $videoElement.get()[action]();\r\n                }\r\n            }\r\n            else if (videoInfo.wistia) {\r\n                try {\r\n                    window._wq = window._wq || [];\r\n                    // @todo Find a way to destroy wistia player instance\r\n                    window._wq.push({\r\n                        id: $videoElement.attr('id'),\r\n                        onReady: function (video) {\r\n                            video[action]();\r\n                        },\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js');\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.loadVideoOnPosterClick = function ($el) {\r\n            var _this = this;\r\n            // check slide has poster\r\n            if (!$el.hasClass('lg-video-loaded')) {\r\n                // check already video element present\r\n                if (!$el.hasClass('lg-has-video')) {\r\n                    $el.addClass('lg-has-video');\r\n                    var _html = void 0;\r\n                    var _src = this.core.galleryItems[this.core.index].src;\r\n                    var video = this.core.galleryItems[this.core.index].video;\r\n                    if (video) {\r\n                        _html =\r\n                            typeof video === 'string' ? JSON.parse(video) : video;\r\n                    }\r\n                    var videoJsPlayer_1 = this.appendVideos($el, {\r\n                        src: _src,\r\n                        addClass: '',\r\n                        index: this.core.index,\r\n                        html5Video: _html,\r\n                    });\r\n                    this.gotoNextSlideOnVideoEnd(_src, this.core.index);\r\n                    var $tempImg = $el.find('.lg-object').first().get();\r\n                    // @todo make sure it is working\r\n                    $el.find('.lg-video-cont').first().append($tempImg);\r\n                    $el.addClass('lg-video-loading');\r\n                    videoJsPlayer_1 &&\r\n                        videoJsPlayer_1.ready(function () {\r\n                            videoJsPlayer_1.on('loadedmetadata', function () {\r\n                                _this.onVideoLoadAfterPosterClick($el, _this.core.index);\r\n                            });\r\n                        });\r\n                    $el.find('.lg-video-object')\r\n                        .first()\r\n                        .on('load.lg error.lg loadeddata.lg', function () {\r\n                        setTimeout(function () {\r\n                            _this.onVideoLoadAfterPosterClick($el, _this.core.index);\r\n                        }, 50);\r\n                    });\r\n                }\r\n                else {\r\n                    this.playVideo(this.core.index);\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.onVideoLoadAfterPosterClick = function ($el, index) {\r\n            $el.addClass('lg-video-loaded');\r\n            this.playVideo(index);\r\n        };\r\n        Video.prototype.destroy = function () {\r\n            this.core.LGel.off('.lg.video');\r\n            this.core.LGel.off('.video');\r\n        };\r\n        return Video;\r\n    }());\r\n\r\n    return Video;\r\n\r\n})));\r\n//# sourceMappingURL=lg-video.umd.js.map","/*!\n * lightgallery | 2.2.0-beta.0 | June 15th 2021\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.lgZoom = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var zoomSettings = {\r\n        scale: 1,\r\n        zoom: true,\r\n        actualSize: true,\r\n        showZoomInOutIcons: false,\r\n        actualSizeIcons: {\r\n            zoomIn: 'lg-zoom-in',\r\n            zoomOut: 'lg-zoom-out',\r\n        },\r\n        enableZoomAfter: 300,\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n    };\n\n    var Zoom = /** @class */ (function () {\r\n        function Zoom(instance, $LG) {\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.$LG = $LG;\r\n            this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n        Zoom.prototype.buildTemplates = function () {\r\n            var zoomIcons = this.settings.showZoomInOutIcons\r\n                ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"Zoom in\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"Zoom out\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n                : '';\r\n            if (this.settings.actualSize) {\r\n                zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"View actual size\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n            }\r\n            this.core.outer.addClass('lg-use-transition-for-zoom');\r\n            this.core.$toolbar.first().append(zoomIcons);\r\n        };\r\n        /**\r\n         * @desc Enable zoom option only once the image is completely loaded\r\n         * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n         *\r\n         * Zoom styles are defined under lg-zoomable CSS class.\r\n         */\r\n        Zoom.prototype.enableZoom = function (event) {\r\n            var _this = this;\r\n            // delay will be 0 except first time\r\n            var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n            // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n            if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n                event.detail.delay) {\r\n                // will execute only once\r\n                _speed = 0;\r\n            }\r\n            else {\r\n                // Remove lg-from-hash to enable starting animation.\r\n                this.$LG('body').first().removeClass('lg-from-hash');\r\n            }\r\n            this.zoomableTimeout = setTimeout(function () {\r\n                _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n            }, _speed + 30);\r\n        };\r\n        Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n            // Add zoomable class\r\n            this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n        };\r\n        Zoom.prototype.getModifier = function (rotateValue, axis, el) {\r\n            var originalRotate = rotateValue;\r\n            rotateValue = Math.abs(rotateValue);\r\n            var transformValues = this.getCurrentTransform(el);\r\n            if (!transformValues) {\r\n                return 1;\r\n            }\r\n            var modifier = 1;\r\n            if (axis === 'X') {\r\n                var flipHorizontalValue = Math.sign(parseFloat(transformValues[0]));\r\n                if (rotateValue === 0 || rotateValue === 180) {\r\n                    modifier = 1;\r\n                }\r\n                else if (rotateValue === 90) {\r\n                    if ((originalRotate === -90 && flipHorizontalValue === 1) ||\r\n                        (originalRotate === 90 && flipHorizontalValue === -1)) {\r\n                        modifier = -1;\r\n                    }\r\n                    else {\r\n                        modifier = 1;\r\n                    }\r\n                }\r\n                modifier = modifier * flipHorizontalValue;\r\n            }\r\n            else {\r\n                var flipVerticalValue = Math.sign(parseFloat(transformValues[3]));\r\n                if (rotateValue === 0 || rotateValue === 180) {\r\n                    modifier = 1;\r\n                }\r\n                else if (rotateValue === 90) {\r\n                    var sinX = parseFloat(transformValues[1]);\r\n                    var sinMinusX = parseFloat(transformValues[2]);\r\n                    modifier = Math.sign(sinX * sinMinusX * originalRotate * flipVerticalValue);\r\n                }\r\n                modifier = modifier * flipVerticalValue;\r\n            }\r\n            return modifier;\r\n        };\r\n        Zoom.prototype.getImageSize = function ($image, rotateValue, axis) {\r\n            var imageSizes = {\r\n                y: 'offsetHeight',\r\n                x: 'offsetWidth',\r\n            };\r\n            if (rotateValue === 90) {\r\n                // Swap axis\r\n                if (axis === 'x') {\r\n                    axis = 'y';\r\n                }\r\n                else {\r\n                    axis = 'x';\r\n                }\r\n            }\r\n            return $image[imageSizes[axis]];\r\n        };\r\n        Zoom.prototype.getDragCords = function (e, rotateValue) {\r\n            if (rotateValue === 90) {\r\n                return {\r\n                    x: e.pageY,\r\n                    y: e.pageX,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    x: e.pageX,\r\n                    y: e.pageY,\r\n                };\r\n            }\r\n        };\r\n        Zoom.prototype.getSwipeCords = function (e, rotateValue) {\r\n            var x = e.targetTouches[0].pageX;\r\n            var y = e.targetTouches[0].pageY;\r\n            if (rotateValue === 90) {\r\n                return {\r\n                    x: y,\r\n                    y: x,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    x: x,\r\n                    y: y,\r\n                };\r\n            }\r\n        };\r\n        Zoom.prototype.getDragAllowedAxises = function ($image, rotateValue) {\r\n            var $lg = this.core.$lgContent.get();\r\n            var scale = parseFloat($image.attr('data-scale')) || 1;\r\n            var imgEl = $image.get();\r\n            var allowY = this.getImageSize(imgEl, rotateValue, 'y') * scale >\r\n                $lg.clientHeight;\r\n            var allowX = this.getImageSize(imgEl, rotateValue, 'x') * scale >\r\n                $lg.clientWidth;\r\n            if (rotateValue === 90) {\r\n                return {\r\n                    allowX: allowY,\r\n                    allowY: allowX,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    allowX: allowX,\r\n                    allowY: allowY,\r\n                };\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param {Element} el\r\n         * @return matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\r\n         * Get the current transform value\r\n         */\r\n        Zoom.prototype.getCurrentTransform = function (el) {\r\n            if (!el) {\r\n                return;\r\n            }\r\n            var st = window.getComputedStyle(el, null);\r\n            var tm = st.getPropertyValue('-webkit-transform') ||\r\n                st.getPropertyValue('-moz-transform') ||\r\n                st.getPropertyValue('-ms-transform') ||\r\n                st.getPropertyValue('-o-transform') ||\r\n                st.getPropertyValue('transform') ||\r\n                'none';\r\n            if (tm !== 'none') {\r\n                return tm.split('(')[1].split(')')[0].split(',');\r\n            }\r\n            return;\r\n        };\r\n        Zoom.prototype.getCurrentRotation = function (el) {\r\n            if (!el) {\r\n                return 0;\r\n            }\r\n            var values = this.getCurrentTransform(el);\r\n            if (values) {\r\n                return Math.round(Math.atan2(parseFloat(values[1]), parseFloat(values[0])) *\r\n                    (180 / Math.PI));\r\n                // If you want rotate in 360\r\n                //return (angle < 0 ? angle + 360 : angle);\r\n            }\r\n            return 0;\r\n        };\r\n        /**\r\n         * @desc Image zoom\r\n         * Translate the wrap and scale the image to get better user experience\r\n         *\r\n         * @param {String} scale - Zoom decrement/increment value\r\n         */\r\n        Zoom.prototype.zoomImage = function (scale) {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var imageNode = $image.get();\r\n            if (!imageNode)\r\n                return;\r\n            var containerRect = this.core.outer.get().getBoundingClientRect();\r\n            // Find offset manually to avoid issue after zoom\r\n            var offsetX = (containerRect.width - imageNode.offsetWidth) / 2 +\r\n                containerRect.left;\r\n            var offsetY = (containerRect.height - imageNode.offsetHeight) / 2 +\r\n                this.$LG(window).scrollTop() +\r\n                containerRect.top;\r\n            var originalX;\r\n            var originalY;\r\n            if (scale === 1) {\r\n                this.positionChanged = false;\r\n            }\r\n            if (this.positionChanged) {\r\n                originalX =\r\n                    parseFloat($image.parent().attr('data-x')) /\r\n                        (parseFloat($image.attr('data-scale')) - 1);\r\n                originalY =\r\n                    parseFloat($image.parent().attr('data-y')) /\r\n                        (parseFloat($image.attr('data-scale')) - 1);\r\n                this.pageX = originalX + offsetX;\r\n                this.pageY = originalY + offsetY;\r\n                this.positionChanged = false;\r\n            }\r\n            var _x = this.pageX - offsetX;\r\n            var _y = this.pageY - offsetY;\r\n            var x = (scale - 1) * _x;\r\n            var y = (scale - 1) * _y;\r\n            this.setZoomStyles({\r\n                x: x,\r\n                y: y,\r\n                scale: scale,\r\n            });\r\n        };\r\n        /**\r\n         * @desc apply scale3d to image and translate to image wrap\r\n         * @param {style} X,Y and scale\r\n         */\r\n        Zoom.prototype.setZoomStyles = function (style) {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var $dummyImage = this.core.outer\r\n                .find('.lg-current .lg-dummy-img')\r\n                .first();\r\n            var $imageWrap = $image.parent();\r\n            $image\r\n                .attr('data-scale', style.scale + '')\r\n                .css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n            $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n            var transform = 'translate3d(-' + style.x + 'px, -' + style.y + 'px, 0)';\r\n            $imageWrap.css('transform', transform);\r\n            $imageWrap.attr('data-x', style.x).attr('data-y', style.y);\r\n        };\r\n        /**\r\n         * @param index - Index of the current slide\r\n         * @param event - event will be available only if the function is called on clicking/taping the imags\r\n         */\r\n        Zoom.prototype.setActualSize = function (index, event) {\r\n            var _this = this;\r\n            var currentItem = this.core.galleryItems[this.core.index];\r\n            // Allow zoom only on image\r\n            if (!currentItem.src ||\r\n                this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                return;\r\n            }\r\n            var scale = this.getCurrentImageActualSizeScale();\r\n            if (this.core.outer.hasClass('lg-zoomed')) {\r\n                this.scale = 1;\r\n            }\r\n            else {\r\n                this.scale = this.getScale(scale);\r\n            }\r\n            this.setPageCords(event);\r\n            this.beginZoom(this.scale);\r\n            this.zoomImage(this.scale);\r\n            setTimeout(function () {\r\n                _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n            }, 10);\r\n        };\r\n        Zoom.prototype.getNaturalWidth = function (index) {\r\n            var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n            var naturalWidth = this.core.galleryItems[index].width;\r\n            return naturalWidth\r\n                ? parseFloat(naturalWidth)\r\n                : $image.get().naturalWidth;\r\n        };\r\n        Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n            var _scale;\r\n            var scale;\r\n            if (naturalWidth > width) {\r\n                _scale = naturalWidth / width;\r\n                scale = _scale || 2;\r\n            }\r\n            else {\r\n                scale = 1;\r\n            }\r\n            return scale;\r\n        };\r\n        Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var width = $image.get().offsetWidth;\r\n            var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n            return this.getActualSizeScale(naturalWidth, width);\r\n        };\r\n        Zoom.prototype.getPageCords = function (event) {\r\n            var cords = {};\r\n            if (event) {\r\n                cords.x = event.pageX || event.targetTouches[0].pageX;\r\n                cords.y = event.pageY || event.targetTouches[0].pageY;\r\n            }\r\n            else {\r\n                var containerRect = this.core.outer.get().getBoundingClientRect();\r\n                cords.x = containerRect.width / 2 + containerRect.left;\r\n                cords.y =\r\n                    containerRect.height / 2 +\r\n                        this.$LG(window).scrollTop() +\r\n                        containerRect.top;\r\n            }\r\n            return cords;\r\n        };\r\n        Zoom.prototype.setPageCords = function (event) {\r\n            var pageCords = this.getPageCords(event);\r\n            this.pageX = pageCords.x;\r\n            this.pageY = pageCords.y;\r\n        };\r\n        // If true, zoomed - in else zoomed out\r\n        Zoom.prototype.beginZoom = function (scale) {\r\n            this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n            if (scale > 1) {\r\n                this.core.outer.addClass('lg-zoomed');\r\n                var $actualSize = this.core.getElementById('lg-actual-size');\r\n                $actualSize\r\n                    .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n                    .addClass(this.settings.actualSizeIcons.zoomOut);\r\n            }\r\n            else {\r\n                this.resetZoom();\r\n            }\r\n            return scale > 1;\r\n        };\r\n        Zoom.prototype.getScale = function (scale) {\r\n            var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n            if (scale < 1) {\r\n                scale = 1;\r\n            }\r\n            else if (scale > actualSizeScale) {\r\n                scale = actualSizeScale;\r\n            }\r\n            return scale;\r\n        };\r\n        Zoom.prototype.init = function () {\r\n            var _this = this;\r\n            if (!this.settings.zoom) {\r\n                return;\r\n            }\r\n            this.buildTemplates();\r\n            this.enableZoomOnSlideItemLoad();\r\n            var tapped = null;\r\n            this.core.outer.on('dblclick.lg', function (event) {\r\n                if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                    return;\r\n                }\r\n                _this.setActualSize(_this.core.index, event);\r\n            });\r\n            this.core.outer.on('touchstart.lg', function (event) {\r\n                var $target = _this.$LG(event.target);\r\n                if (event.targetTouches.length === 1 &&\r\n                    $target.hasClass('lg-image')) {\r\n                    if (!tapped) {\r\n                        tapped = setTimeout(function () {\r\n                            tapped = null;\r\n                        }, 300);\r\n                    }\r\n                    else {\r\n                        clearTimeout(tapped);\r\n                        tapped = null;\r\n                        _this.setActualSize(_this.core.index, event);\r\n                    }\r\n                    event.preventDefault();\r\n                }\r\n            });\r\n            // Update zoom on resize and orientationchange\r\n            this.core.LGel.on(lGEvents.containerResize + \".zoom\", function () {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                _this.setPageCords();\r\n                _this.zoomImage(_this.scale);\r\n            });\r\n            this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n                if (_this.core.outer.find('.lg-current .lg-image').get()) {\r\n                    _this.scale -= _this.settings.scale;\r\n                    _this.scale = _this.getScale(_this.scale);\r\n                    _this.beginZoom(_this.scale);\r\n                    _this.zoomImage(_this.scale);\r\n                }\r\n            });\r\n            this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n                _this.zoomIn();\r\n            });\r\n            this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n                _this.setActualSize(_this.core.index);\r\n            });\r\n            this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n                _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n            });\r\n            // Reset zoom on slide change\r\n            this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n                var prevIndex = event.detail.prevIndex;\r\n                _this.scale = 1;\r\n                _this.positionChanged = false;\r\n                _this.resetZoom(prevIndex);\r\n            });\r\n            // Drag option after zoom\r\n            this.zoomDrag();\r\n            this.pinchZoom();\r\n            this.zoomSwipe();\r\n            // Store the zoomable timeout value just to clear it while closing\r\n            this.zoomableTimeout = false;\r\n            this.positionChanged = false;\r\n            // Set the initial value center\r\n            this.pageX = this.core.outer.width() / 2;\r\n            this.pageY =\r\n                this.core.outer.height() / 2 + this.$LG(window).scrollTop();\r\n            this.scale = 1;\r\n        };\r\n        Zoom.prototype.zoomIn = function (scale) {\r\n            var currentItem = this.core.galleryItems[this.core.index];\r\n            // Allow zoom only on image\r\n            if (!currentItem.src) {\r\n                return;\r\n            }\r\n            if (scale) {\r\n                this.scale = scale;\r\n            }\r\n            else {\r\n                this.scale += this.settings.scale;\r\n            }\r\n            this.scale = this.getScale(this.scale);\r\n            this.beginZoom(this.scale);\r\n            this.zoomImage(this.scale);\r\n        };\r\n        // Reset zoom effect\r\n        Zoom.prototype.resetZoom = function (index) {\r\n            this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n            var $actualSize = this.core.getElementById('lg-actual-size');\r\n            var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n            $actualSize\r\n                .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n                .addClass(this.settings.actualSizeIcons.zoomIn);\r\n            $item.find('.lg-img-wrap').first().removeAttr('style data-x data-y');\r\n            $item.find('.lg-image').first().removeAttr('style data-scale');\r\n            // Reset pagx pagy values to center\r\n            this.setPageCords();\r\n        };\r\n        Zoom.prototype.getTouchDistance = function (e) {\r\n            return Math.sqrt((e.targetTouches[0].pageX - e.targetTouches[1].pageX) *\r\n                (e.targetTouches[0].pageX - e.targetTouches[1].pageX) +\r\n                (e.targetTouches[0].pageY - e.targetTouches[1].pageY) *\r\n                    (e.targetTouches[0].pageY - e.targetTouches[1].pageY));\r\n        };\r\n        Zoom.prototype.pinchZoom = function () {\r\n            var _this = this;\r\n            var startDist = 0;\r\n            var pinchStarted = false;\r\n            var initScale = 1;\r\n            var $item = this.core.getSlideItem(this.core.index);\r\n            this.core.$inner.on('touchstart.lg', function (e) {\r\n                $item = _this.core.getSlideItem(_this.core.index);\r\n                e.preventDefault();\r\n                if (e.targetTouches.length === 2 &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    initScale = _this.scale || 1;\r\n                    _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                    _this.core.touchAction = 'pinch';\r\n                    startDist = _this.getTouchDistance(e);\r\n                }\r\n            });\r\n            this.core.$inner.on('touchmove.lg', function (e) {\r\n                e.preventDefault();\r\n                if (e.targetTouches.length === 2 &&\r\n                    _this.core.touchAction === 'pinch' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    var endDist = _this.getTouchDistance(e);\r\n                    var distance = startDist - endDist;\r\n                    if (!pinchStarted && Math.abs(distance) > 5) {\r\n                        pinchStarted = true;\r\n                    }\r\n                    if (pinchStarted) {\r\n                        _this.scale = Math.max(1, initScale + -distance * 0.008);\r\n                        _this.zoomImage(_this.scale);\r\n                    }\r\n                }\r\n            });\r\n            this.core.$inner.on('touchend.lg', function (e) {\r\n                if (_this.core.touchAction === 'pinch' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    pinchStarted = false;\r\n                    startDist = 0;\r\n                    if (_this.scale <= 1) {\r\n                        _this.resetZoom();\r\n                    }\r\n                    else {\r\n                        _this.scale = _this.getScale(_this.scale);\r\n                        _this.zoomImage(_this.scale);\r\n                        _this.core.outer.addClass('lg-zoomed');\r\n                    }\r\n                    _this.core.touchAction = undefined;\r\n                }\r\n            });\r\n        };\r\n        Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration, rotateValue) {\r\n            var rotateEl = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-img-rotate')\r\n                .first()\r\n                .get();\r\n            var distanceXnew = endCoords.x - startCoords.x;\r\n            var distanceYnew = endCoords.y - startCoords.y;\r\n            var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n            var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n            if (speedX > 2) {\r\n                speedX += 1;\r\n            }\r\n            if (speedY > 2) {\r\n                speedY += 1;\r\n            }\r\n            distanceXnew = distanceXnew * speedX;\r\n            distanceYnew = distanceYnew * speedY;\r\n            var _LGel = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-object')\r\n                .first();\r\n            var dataX = parseFloat(_LGel.attr('data-x')) || 0;\r\n            var dataY = parseFloat(_LGel.attr('data-y')) || 0;\r\n            var distance = {};\r\n            distance.x =\r\n                -Math.abs(dataX) +\r\n                    distanceXnew * this.getModifier(rotateValue, 'X', rotateEl);\r\n            distance.y =\r\n                -Math.abs(dataY) +\r\n                    distanceYnew * this.getModifier(rotateValue, 'Y', rotateEl);\r\n            var possibleSwipeCords = this.getPossibleSwipeDragCords($image, rotateValue);\r\n            if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n                if (allowY) {\r\n                    if (distance.y <= -possibleSwipeCords.maxY) {\r\n                        distance.y = -possibleSwipeCords.maxY;\r\n                    }\r\n                    else if (distance.y >= -possibleSwipeCords.minY) {\r\n                        distance.y = -possibleSwipeCords.minY;\r\n                    }\r\n                }\r\n                if (allowX) {\r\n                    if (distance.x <= -possibleSwipeCords.maxX) {\r\n                        distance.x = -possibleSwipeCords.maxX;\r\n                    }\r\n                    else if (distance.x >= -possibleSwipeCords.minX) {\r\n                        distance.x = -possibleSwipeCords.minX;\r\n                    }\r\n                }\r\n                if (allowY) {\r\n                    _LGel.attr('data-y', Math.abs(distance.y));\r\n                }\r\n                else {\r\n                    var dataY_1 = parseFloat(_LGel.attr('data-y')) || 0;\r\n                    distance.y = -Math.abs(dataY_1);\r\n                }\r\n                if (allowX) {\r\n                    _LGel.attr('data-x', Math.abs(distance.x));\r\n                }\r\n                else {\r\n                    var dataX_1 = parseFloat(_LGel.attr('data-x')) || 0;\r\n                    distance.x = -Math.abs(dataX_1);\r\n                }\r\n                this.setZoomSwipeStyles(_LGel, distance);\r\n                this.positionChanged = true;\r\n            }\r\n        };\r\n        Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords, dataY, dataX, rotateValue, rotateEl) {\r\n            var distance = {};\r\n            if (allowY) {\r\n                distance.y =\r\n                    -Math.abs(dataY) +\r\n                        (endCoords.y - startCoords.y) *\r\n                            this.getModifier(rotateValue, 'Y', rotateEl);\r\n                if (distance.y <= -possibleSwipeCords.maxY) {\r\n                    var diffMaxY = -possibleSwipeCords.maxY - distance.y;\r\n                    distance.y = -possibleSwipeCords.maxY - diffMaxY / 6;\r\n                }\r\n                else if (distance.y >= -possibleSwipeCords.minY) {\r\n                    var diffMinY = distance.y - -possibleSwipeCords.minY;\r\n                    distance.y = -possibleSwipeCords.minY + diffMinY / 6;\r\n                }\r\n            }\r\n            else {\r\n                distance.y = -Math.abs(dataY);\r\n            }\r\n            if (allowX) {\r\n                distance.x =\r\n                    -Math.abs(dataX) +\r\n                        (endCoords.x - startCoords.x) *\r\n                            this.getModifier(rotateValue, 'X', rotateEl);\r\n                if (distance.x <= -possibleSwipeCords.maxX) {\r\n                    var diffMaxX = -possibleSwipeCords.maxX - distance.x;\r\n                    distance.x = -possibleSwipeCords.maxX - diffMaxX / 6;\r\n                }\r\n                else if (distance.x >= -possibleSwipeCords.minX) {\r\n                    var diffMinX = distance.x - -possibleSwipeCords.minX;\r\n                    distance.x = -possibleSwipeCords.minX + diffMinX / 6;\r\n                }\r\n            }\r\n            else {\r\n                distance.x = -Math.abs(dataX);\r\n            }\r\n            return distance;\r\n        };\r\n        Zoom.prototype.getPossibleSwipeDragCords = function ($image, rotateValue) {\r\n            var $cont = this.core.$lgContent;\r\n            var contHeight = $cont.height();\r\n            var contWidth = $cont.width();\r\n            var imageYSize = this.getImageSize($image.get(), rotateValue, 'y');\r\n            var imageXSize = this.getImageSize($image.get(), rotateValue, 'x');\r\n            var dataY = parseFloat($image.attr('data-scale')) || 1;\r\n            var elDataScale = Math.abs(dataY);\r\n            var minY = (contHeight - imageYSize) / 2;\r\n            var maxY = Math.abs(imageYSize * elDataScale - contHeight + minY);\r\n            var minX = (contWidth - imageXSize) / 2;\r\n            var maxX = Math.abs(imageXSize * elDataScale - contWidth + minX);\r\n            if (rotateValue === 90) {\r\n                return {\r\n                    minY: minX,\r\n                    maxY: maxX,\r\n                    minX: minY,\r\n                    maxX: maxY,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    minY: minY,\r\n                    maxY: maxY,\r\n                    minX: minX,\r\n                    maxX: maxX,\r\n                };\r\n            }\r\n        };\r\n        Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n            LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n        };\r\n        Zoom.prototype.zoomSwipe = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isMoved = false;\r\n            // Allow x direction drag\r\n            var allowX = false;\r\n            // Allow Y direction drag\r\n            var allowY = false;\r\n            var startTime = new Date();\r\n            var endTime = new Date();\r\n            var dataX = 0;\r\n            var dataY = 0;\r\n            var possibleSwipeCords;\r\n            var _LGel;\r\n            var rotateEl = null;\r\n            var rotateValue = 0;\r\n            var $item = this.core.getSlideItem(this.core.index);\r\n            this.core.$inner.on('touchstart.lg', function (e) {\r\n                e.preventDefault();\r\n                var currentItem = _this.core.galleryItems[_this.core.index];\r\n                // Allow zoom only on image\r\n                if (!currentItem.src) {\r\n                    return;\r\n                }\r\n                $item = _this.core.getSlideItem(_this.core.index);\r\n                if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) &&\r\n                    e.targetTouches.length === 1 &&\r\n                    _this.core.outer.hasClass('lg-zoomed')) {\r\n                    startTime = new Date();\r\n                    _this.core.touchAction = 'zoomSwipe';\r\n                    var $image = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-object')\r\n                        .first();\r\n                    _LGel = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-wrap')\r\n                        .first();\r\n                    rotateEl = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-rotate')\r\n                        .first()\r\n                        .get();\r\n                    rotateValue = _this.getCurrentRotation(rotateEl);\r\n                    var dragAllowedAxises = _this.getDragAllowedAxises($image, Math.abs(rotateValue));\r\n                    allowY = dragAllowedAxises.allowY;\r\n                    allowX = dragAllowedAxises.allowX;\r\n                    if (allowX || allowY) {\r\n                        startCoords = _this.getSwipeCords(e, Math.abs(rotateValue));\r\n                    }\r\n                    dataY = parseFloat(_LGel.attr('data-y'));\r\n                    dataX = parseFloat(_LGel.attr('data-x'));\r\n                    possibleSwipeCords = _this.getPossibleSwipeDragCords($image, rotateValue);\r\n                    // reset opacity and transition duration\r\n                    _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n                }\r\n            });\r\n            this.core.$inner.on('touchmove.lg', function (e) {\r\n                e.preventDefault();\r\n                if (e.targetTouches.length === 1 &&\r\n                    _this.core.touchAction === 'zoomSwipe' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    _this.core.touchAction = 'zoomSwipe';\r\n                    endCoords = _this.getSwipeCords(e, Math.abs(rotateValue));\r\n                    var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords, dataY, dataX, rotateValue, rotateEl);\r\n                    if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                        Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                        isMoved = true;\r\n                        _this.setZoomSwipeStyles(_LGel, distance);\r\n                    }\r\n                }\r\n            });\r\n            this.core.$inner.on('touchend.lg', function (e) {\r\n                if (_this.core.touchAction === 'zoomSwipe' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    _this.core.touchAction = undefined;\r\n                    _this.core.outer.removeClass('lg-zoom-dragging');\r\n                    if (!isMoved) {\r\n                        return;\r\n                    }\r\n                    isMoved = false;\r\n                    endTime = new Date();\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration, rotateValue);\r\n                }\r\n            });\r\n        };\r\n        Zoom.prototype.zoomDrag = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isDragging = false;\r\n            var isMoved = false;\r\n            var rotateEl = null;\r\n            var rotateValue = 0;\r\n            // Allow x direction drag\r\n            var allowX = false;\r\n            // Allow Y direction drag\r\n            var allowY = false;\r\n            var startTime;\r\n            var endTime;\r\n            var possibleSwipeCords;\r\n            var dataY;\r\n            var dataX;\r\n            var _LGel;\r\n            this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n                var currentItem = _this.core.galleryItems[_this.core.index];\r\n                // Allow zoom only on image\r\n                if (!currentItem.src) {\r\n                    return;\r\n                }\r\n                var $item = _this.core.getSlideItem(_this.core.index);\r\n                if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) {\r\n                    startTime = new Date();\r\n                    // execute only on .lg-object\r\n                    var $image = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-object')\r\n                        .first();\r\n                    _LGel = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-wrap')\r\n                        .first();\r\n                    rotateEl = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-rotate')\r\n                        .get();\r\n                    rotateValue = _this.getCurrentRotation(rotateEl);\r\n                    var dragAllowedAxises = _this.getDragAllowedAxises($image, Math.abs(rotateValue));\r\n                    allowY = dragAllowedAxises.allowY;\r\n                    allowX = dragAllowedAxises.allowX;\r\n                    if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                        if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                            (allowX || allowY)) {\r\n                            e.preventDefault();\r\n                            startCoords = _this.getDragCords(e, Math.abs(rotateValue));\r\n                            possibleSwipeCords = _this.getPossibleSwipeDragCords($image, rotateValue);\r\n                            isDragging = true;\r\n                            dataY = parseFloat(_LGel.attr('data-y'));\r\n                            dataX = parseFloat(_LGel.attr('data-x'));\r\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                            _this.core.outer.get().scrollLeft += 1;\r\n                            _this.core.outer.get().scrollLeft -= 1;\r\n                            _this.core.outer\r\n                                .removeClass('lg-grab')\r\n                                .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                            // reset opacity and transition duration\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n                if (isDragging) {\r\n                    isMoved = true;\r\n                    endCoords = _this.getDragCords(e, Math.abs(rotateValue));\r\n                    var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords, dataY, dataX, rotateValue, rotateEl);\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n                if (isDragging) {\r\n                    endTime = new Date();\r\n                    isDragging = false;\r\n                    _this.core.outer.removeClass('lg-zoom-dragging');\r\n                    // Fix for chrome mouse move on click\r\n                    if (isMoved &&\r\n                        (startCoords.x !== endCoords.x ||\r\n                            startCoords.y !== endCoords.y)) {\r\n                        endCoords = _this.getDragCords(e, Math.abs(rotateValue));\r\n                        var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                        _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration, rotateValue);\r\n                    }\r\n                    isMoved = false;\r\n                }\r\n                _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n            });\r\n        };\r\n        Zoom.prototype.closeGallery = function () {\r\n            this.resetZoom();\r\n        };\r\n        Zoom.prototype.destroy = function () {\r\n            // Unbind all events added by lightGallery zoom plugin\r\n            this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n            this.core.LGel.off('.lg.zoom');\r\n            this.core.LGel.off('.zoom');\r\n            clearTimeout(this.zoomableTimeout);\r\n            this.zoomableTimeout = false;\r\n        };\r\n        return Zoom;\r\n    }());\n\n    return Zoom;\n\n})));\n//# sourceMappingURL=lg-zoom.umd.js.map\n","/*!\n * lightgallery | 2.2.0-beta.0 | June 15th 2021\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.lgThumbnail = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var thumbnailsSettings = {\r\n        thumbnail: true,\r\n        animateThumb: true,\r\n        currentPagerPosition: 'middle',\r\n        alignThumbnails: 'middle',\r\n        thumbWidth: 100,\r\n        thumbHeight: '80px',\r\n        thumbMargin: 5,\r\n        appendThumbnailsTo: '.lg-components',\r\n        toggleThumb: false,\r\n        enableThumbDrag: true,\r\n        enableThumbSwipe: true,\r\n        thumbnailSwipeThreshold: 10,\r\n        loadYouTubeThumbnail: true,\r\n        youTubeThumbSize: 1,\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n    };\n\n    var Thumbnail = /** @class */ (function () {\r\n        function Thumbnail(instance, $LG) {\r\n            this.thumbOuterWidth = 0;\r\n            this.thumbTotalWidth = 0;\r\n            this.translateX = 0;\r\n            this.thumbClickable = false;\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.$LG = $LG;\r\n            return this;\r\n        }\r\n        Thumbnail.prototype.init = function () {\r\n            // extend module default settings with lightGallery core settings\r\n            this.settings = __assign(__assign({}, thumbnailsSettings), this.core.settings);\r\n            this.thumbOuterWidth = 0;\r\n            this.thumbTotalWidth =\r\n                this.core.galleryItems.length *\r\n                    (this.settings.thumbWidth + this.settings.thumbMargin);\r\n            // Thumbnail animation value\r\n            this.translateX = 0;\r\n            this.setAnimateThumbStyles();\r\n            if (!this.core.settings.allowMediaOverlap) {\r\n                this.settings.toggleThumb = false;\r\n            }\r\n            if (this.settings.thumbnail) {\r\n                this.build();\r\n                if (this.settings.animateThumb) {\r\n                    if (this.settings.enableThumbDrag) {\r\n                        this.enableThumbDrag();\r\n                    }\r\n                    if (this.settings.enableThumbSwipe) {\r\n                        this.enableThumbSwipe();\r\n                    }\r\n                    this.thumbClickable = false;\r\n                }\r\n                else {\r\n                    this.thumbClickable = true;\r\n                }\r\n                this.toggleThumbBar();\r\n                this.thumbKeyPress();\r\n            }\r\n        };\r\n        Thumbnail.prototype.build = function () {\r\n            var _this = this;\r\n            this.setThumbMarkup();\r\n            this.manageActiveClassOnSlideChange();\r\n            this.$lgThumb.first().on('click.lg touchend.lg', function (e) {\r\n                var $target = _this.$LG(e.target);\r\n                if (!$target.hasAttribute('data-lg-item-id')) {\r\n                    return;\r\n                }\r\n                setTimeout(function () {\r\n                    // In IE9 and bellow touch does not support\r\n                    // Go to slide if browser does not support css transitions\r\n                    if (_this.thumbClickable && !_this.core.lgBusy) {\r\n                        var index = parseInt($target.attr('data-lg-item-id'));\r\n                        _this.core.slide(index, false, true, false);\r\n                    }\r\n                }, 50);\r\n            });\r\n            this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\r\n                var index = event.detail.index;\r\n                _this.animateThumb(index);\r\n            });\r\n            this.core.LGel.on(lGEvents.beforeOpen + \".thumb\", function () {\r\n                _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n            });\r\n            this.core.LGel.on(lGEvents.updateSlides + \".thumb\", function () {\r\n                _this.rebuildThumbnails();\r\n            });\r\n            this.core.LGel.on(lGEvents.containerResize + \".thumb\", function () {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                setTimeout(function () {\r\n                    _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n                    _this.animateThumb(_this.core.index);\r\n                    _this.thumbOuterWidth = _this.core.outer.get().offsetWidth;\r\n                }, 50);\r\n            });\r\n        };\r\n        Thumbnail.prototype.setThumbMarkup = function () {\r\n            var thumbOuterClassNames = 'lg-thumb-outer ';\r\n            if (this.settings.alignThumbnails) {\r\n                thumbOuterClassNames += \"lg-thumb-align-\" + this.settings.alignThumbnails;\r\n            }\r\n            var html = \"<div class=\\\"\" + thumbOuterClassNames + \"\\\">\\n        <div class=\\\"lg-thumb lg-group\\\">\\n        </div>\\n        </div>\";\r\n            this.core.outer.addClass('lg-has-thumb');\r\n            if (this.settings.appendThumbnailsTo === '.lg-components') {\r\n                this.core.$lgComponents.append(html);\r\n            }\r\n            else {\r\n                this.core.outer.append(html);\r\n            }\r\n            this.$thumbOuter = this.core.outer.find('.lg-thumb-outer').first();\r\n            this.$lgThumb = this.core.outer.find('.lg-thumb').first();\r\n            if (this.settings.animateThumb) {\r\n                this.core.outer\r\n                    .find('.lg-thumb')\r\n                    .css('transition-duration', this.core.settings.speed + 'ms')\r\n                    .css('width', this.thumbTotalWidth + 'px')\r\n                    .css('position', 'relative');\r\n            }\r\n            this.setThumbItemHtml(this.core.galleryItems);\r\n        };\r\n        Thumbnail.prototype.enableThumbDrag = function () {\r\n            var _this = this;\r\n            var thumbDragUtils = {\r\n                cords: {\r\n                    startX: 0,\r\n                    endX: 0,\r\n                },\r\n                isMoved: false,\r\n                newTranslateX: 0,\r\n                startTime: new Date(),\r\n                endTime: new Date(),\r\n                touchMoveTime: 0,\r\n            };\r\n            var isDragging = false;\r\n            this.$thumbOuter.addClass('lg-grab');\r\n            this.core.outer\r\n                .find('.lg-thumb')\r\n                .first()\r\n                .on('mousedown.lg.thumb', function (e) {\r\n                if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                    // execute only on .lg-object\r\n                    e.preventDefault();\r\n                    thumbDragUtils.cords.startX = e.pageX;\r\n                    thumbDragUtils.startTime = new Date();\r\n                    _this.thumbClickable = false;\r\n                    isDragging = true;\r\n                    // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                    _this.core.outer.get().scrollLeft += 1;\r\n                    _this.core.outer.get().scrollLeft -= 1;\r\n                    // *\r\n                    _this.$thumbOuter\r\n                        .removeClass('lg-grab')\r\n                        .addClass('lg-grabbing');\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mousemove.lg.thumb.global\" + this.core.lgId, function (e) {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                if (isDragging) {\r\n                    thumbDragUtils.cords.endX = e.pageX;\r\n                    thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mouseup.lg.thumb.global\" + this.core.lgId, function () {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                if (thumbDragUtils.isMoved) {\r\n                    thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\r\n                }\r\n                else {\r\n                    _this.thumbClickable = true;\r\n                }\r\n                if (isDragging) {\r\n                    isDragging = false;\r\n                    _this.$thumbOuter.removeClass('lg-grabbing').addClass('lg-grab');\r\n                }\r\n            });\r\n        };\r\n        Thumbnail.prototype.enableThumbSwipe = function () {\r\n            var _this = this;\r\n            var thumbDragUtils = {\r\n                cords: {\r\n                    startX: 0,\r\n                    endX: 0,\r\n                },\r\n                isMoved: false,\r\n                newTranslateX: 0,\r\n                startTime: new Date(),\r\n                endTime: new Date(),\r\n                touchMoveTime: 0,\r\n            };\r\n            this.$lgThumb.on('touchstart.lg', function (e) {\r\n                if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                    e.preventDefault();\r\n                    thumbDragUtils.cords.startX = e.targetTouches[0].pageX;\r\n                    _this.thumbClickable = false;\r\n                    thumbDragUtils.startTime = new Date();\r\n                }\r\n            });\r\n            this.$lgThumb.on('touchmove.lg', function (e) {\r\n                if (_this.thumbTotalWidth > _this.thumbOuterWidth) {\r\n                    e.preventDefault();\r\n                    thumbDragUtils.cords.endX = e.targetTouches[0].pageX;\r\n                    thumbDragUtils = _this.onThumbTouchMove(thumbDragUtils);\r\n                }\r\n            });\r\n            this.$lgThumb.on('touchend.lg', function () {\r\n                if (thumbDragUtils.isMoved) {\r\n                    thumbDragUtils = _this.onThumbTouchEnd(thumbDragUtils);\r\n                }\r\n                else {\r\n                    _this.thumbClickable = true;\r\n                }\r\n            });\r\n        };\r\n        // Rebuild thumbnails\r\n        Thumbnail.prototype.rebuildThumbnails = function () {\r\n            var _this = this;\r\n            // Remove transitions\r\n            this.$thumbOuter.addClass('lg-rebuilding-thumbnails');\r\n            setTimeout(function () {\r\n                _this.thumbTotalWidth =\r\n                    _this.core.galleryItems.length *\r\n                        (_this.settings.thumbWidth + _this.settings.thumbMargin);\r\n                _this.$lgThumb.css('width', _this.thumbTotalWidth + 'px');\r\n                _this.$lgThumb.empty();\r\n                _this.setThumbItemHtml(_this.core.galleryItems);\r\n                _this.animateThumb(_this.core.index);\r\n            }, 50);\r\n            setTimeout(function () {\r\n                _this.$thumbOuter.removeClass('lg-rebuilding-thumbnails');\r\n            }, 200);\r\n        };\r\n        // @ts-check\r\n        Thumbnail.prototype.setTranslate = function (value) {\r\n            this.$lgThumb.css('transform', 'translate3d(-' + value + 'px, 0px, 0px)');\r\n        };\r\n        Thumbnail.prototype.getPossibleTransformX = function (left) {\r\n            if (left > this.thumbTotalWidth - this.thumbOuterWidth) {\r\n                left = this.thumbTotalWidth - this.thumbOuterWidth;\r\n            }\r\n            if (left < 0) {\r\n                left = 0;\r\n            }\r\n            return left;\r\n        };\r\n        Thumbnail.prototype.animateThumb = function (index) {\r\n            this.$lgThumb.css('transition-duration', this.core.settings.speed + 'ms');\r\n            if (this.settings.animateThumb) {\r\n                var position = 0;\r\n                switch (this.settings.currentPagerPosition) {\r\n                    case 'left':\r\n                        position = 0;\r\n                        break;\r\n                    case 'middle':\r\n                        position =\r\n                            this.thumbOuterWidth / 2 - this.settings.thumbWidth / 2;\r\n                        break;\r\n                    case 'right':\r\n                        position = this.thumbOuterWidth - this.settings.thumbWidth;\r\n                }\r\n                this.translateX =\r\n                    (this.settings.thumbWidth + this.settings.thumbMargin) * index -\r\n                        1 -\r\n                        position;\r\n                if (this.translateX > this.thumbTotalWidth - this.thumbOuterWidth) {\r\n                    this.translateX = this.thumbTotalWidth - this.thumbOuterWidth;\r\n                }\r\n                if (this.translateX < 0) {\r\n                    this.translateX = 0;\r\n                }\r\n                this.setTranslate(this.translateX);\r\n            }\r\n        };\r\n        Thumbnail.prototype.onThumbTouchMove = function (thumbDragUtils) {\r\n            thumbDragUtils.newTranslateX = this.translateX;\r\n            thumbDragUtils.isMoved = true;\r\n            thumbDragUtils.touchMoveTime = new Date().valueOf();\r\n            thumbDragUtils.newTranslateX -=\r\n                thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\r\n            thumbDragUtils.newTranslateX = this.getPossibleTransformX(thumbDragUtils.newTranslateX);\r\n            // move current slide\r\n            this.setTranslate(thumbDragUtils.newTranslateX);\r\n            this.$thumbOuter.addClass('lg-dragging');\r\n            return thumbDragUtils;\r\n        };\r\n        Thumbnail.prototype.onThumbTouchEnd = function (thumbDragUtils) {\r\n            thumbDragUtils.isMoved = false;\r\n            thumbDragUtils.endTime = new Date();\r\n            this.$thumbOuter.removeClass('lg-dragging');\r\n            var touchDuration = thumbDragUtils.endTime.valueOf() -\r\n                thumbDragUtils.startTime.valueOf();\r\n            var distanceXnew = thumbDragUtils.cords.endX - thumbDragUtils.cords.startX;\r\n            var speedX = Math.abs(distanceXnew) / touchDuration;\r\n            // Some magical numbers\r\n            // Can be improved\r\n            if (speedX > 0.15 &&\r\n                thumbDragUtils.endTime.valueOf() - thumbDragUtils.touchMoveTime < 30) {\r\n                speedX += 1;\r\n                if (speedX > 2) {\r\n                    speedX += 1;\r\n                }\r\n                speedX =\r\n                    speedX +\r\n                        speedX * (Math.abs(distanceXnew) / this.thumbOuterWidth);\r\n                this.$lgThumb.css('transition-duration', Math.min(speedX - 1, 2) + 'settings');\r\n                distanceXnew = distanceXnew * speedX;\r\n                this.translateX = this.getPossibleTransformX(this.translateX - distanceXnew);\r\n                this.setTranslate(this.translateX);\r\n            }\r\n            else {\r\n                this.translateX = thumbDragUtils.newTranslateX;\r\n            }\r\n            if (Math.abs(thumbDragUtils.cords.endX - thumbDragUtils.cords.startX) <\r\n                this.settings.thumbnailSwipeThreshold) {\r\n                this.thumbClickable = true;\r\n            }\r\n            return thumbDragUtils;\r\n        };\r\n        Thumbnail.prototype.getThumbHtml = function (thumb, index) {\r\n            var slideVideoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            var thumbImg;\r\n            if (slideVideoInfo.youtube) {\r\n                if (this.settings.loadYouTubeThumbnail) {\r\n                    thumbImg =\r\n                        '//img.youtube.com/vi/' +\r\n                            slideVideoInfo.youtube[1] +\r\n                            '/' +\r\n                            this.settings.youTubeThumbSize +\r\n                            '.jpg';\r\n                }\r\n                else {\r\n                    thumbImg = thumb;\r\n                }\r\n            }\r\n            else {\r\n                thumbImg = thumb;\r\n            }\r\n            return \"<div data-lg-item-id=\\\"\" + index + \"\\\" class=\\\"lg-thumb-item \" + (index === this.core.index ? ' active' : '') + \"\\\" \\n        style=\\\"width:\" + this.settings.thumbWidth + \"px; height: \" + this.settings.thumbHeight + \";\\n            margin-right: \" + this.settings.thumbMargin + \"px;\\\">\\n            <img data-lg-item-id=\\\"\" + index + \"\\\" src=\\\"\" + thumbImg + \"\\\" />\\n        </div>\";\r\n        };\r\n        Thumbnail.prototype.getThumbItemHtml = function (items) {\r\n            var thumbList = '';\r\n            for (var i = 0; i < items.length; i++) {\r\n                thumbList += this.getThumbHtml(items[i].thumb, i);\r\n            }\r\n            return thumbList;\r\n        };\r\n        Thumbnail.prototype.setThumbItemHtml = function (items) {\r\n            var thumbList = this.getThumbItemHtml(items);\r\n            this.$lgThumb.html(thumbList);\r\n        };\r\n        Thumbnail.prototype.setAnimateThumbStyles = function () {\r\n            if (this.settings.animateThumb) {\r\n                this.core.outer.addClass('lg-animate-thumb');\r\n            }\r\n        };\r\n        // Manage thumbnail active calss\r\n        Thumbnail.prototype.manageActiveClassOnSlideChange = function () {\r\n            var _this = this;\r\n            // manage active class for thumbnail\r\n            this.core.LGel.on(lGEvents.beforeSlide + \".thumb\", function (event) {\r\n                var $thumb = _this.core.outer.find('.lg-thumb-item');\r\n                var index = event.detail.index;\r\n                $thumb.removeClass('active');\r\n                $thumb.eq(index).addClass('active');\r\n            });\r\n        };\r\n        // Toggle thumbnail bar\r\n        Thumbnail.prototype.toggleThumbBar = function () {\r\n            var _this = this;\r\n            if (this.settings.toggleThumb) {\r\n                this.core.outer.addClass('lg-can-toggle');\r\n                this.core.$toolbar.append('<button type=\"button\" aria-label=\"Toggle thumbnails\" class=\"lg-toggle-thumb lg-icon\"></button>');\r\n                this.core.outer\r\n                    .find('.lg-toggle-thumb')\r\n                    .first()\r\n                    .on('click.lg', function () {\r\n                    _this.core.outer.toggleClass('lg-components-open');\r\n                });\r\n            }\r\n        };\r\n        Thumbnail.prototype.thumbKeyPress = function () {\r\n            var _this = this;\r\n            this.$LG(window).on(\"keydown.lg.thumb.global\" + this.core.lgId, function (e) {\r\n                if (!_this.core.lgOpened || !_this.settings.toggleThumb)\r\n                    return;\r\n                if (e.keyCode === 38) {\r\n                    e.preventDefault();\r\n                    _this.core.outer.addClass('lg-components-open');\r\n                }\r\n                else if (e.keyCode === 40) {\r\n                    e.preventDefault();\r\n                    _this.core.outer.removeClass('lg-components-open');\r\n                }\r\n            });\r\n        };\r\n        Thumbnail.prototype.destroy = function () {\r\n            if (this.settings.thumbnail) {\r\n                this.$LG(window).off(\".lg.thumb.global\" + this.core.lgId);\r\n                this.core.LGel.off('.lg.thumb');\r\n                this.core.LGel.off('.thumb');\r\n                this.$thumbOuter.remove();\r\n                this.core.outer.removeClass('lg-has-thumb');\r\n            }\r\n        };\r\n        return Thumbnail;\r\n    }());\n\n    return Thumbnail;\n\n})));\n//# sourceMappingURL=lg-thumbnail.umd.js.map\n"]}